{"version":3,"sources":["D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/project-report/component/project-report.component.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/project-report/model/project-summery.model.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/project-report/project-report-routing.module.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/project-report/project-report.module.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/project-report/service/project-report.service.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/project-report/styles/project-report.component.scss","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/project-report/template/project-report.component.html"],"names":[],"mappings":"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","file":"11.chunk.js","sourcesContent":["import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { routerTransition } from '../../../../router.animations';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { ProjectReportService } from '../service/project-report.service';\nimport { ToastrService } from 'toastr-ng2';\nimport { ProjectReportModel } from '../model/project-report.model';\nimport { ProjectSummeryModel } from '../model/project-summery.model';\nimport { AuthenticationService } from '../../../../authentication/authentication.service';\nimport { PaginationModel } from '../../../../shared/model/pagination.model';\nimport { CommonService } from '../../../../shared/services/common.service';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { IMyDpOptions } from 'mydatepicker';\n\n@Component( {\n    selector: 'app-project-report',\n    templateUrl: '../template/project-report.component.html',\n    styleUrls: ['../styles/project-report.component.scss'],\n    animations: [routerTransition()],\n    providers: [ProjectReportService,ToastrService,AuthenticationService,CommonService]\n})\n\nexport class ProjectReportComponent implements OnInit {      \n    closeResult: string;\n    public projectReportSnapshotModelList : Array<ProjectReportModel>;\n    public projectReportSnapshotColumnList : Array<any>;\n    public projectReportDetailsModelList : Array<ProjectReportModel>;\n    public projectReportDetailsColumnList : Array<any>;\n    public projectTypeList : Array<string>;\n    public currentProjectType : string;  \n    public isShowProjectSummery : Boolean;\n    public isShowProjectSnashot : Boolean;\n    public isShowProjectDetails : Boolean;\n    public currentReportName : string;        \n    public projectSummeryModel : ProjectSummeryModel;    \n    public searcProjectDetailsReport: string;\n    public searcProjectSnapshotReport: string;\n    public snapshotLoading = false;    \n    public detailsLoading = false;    \n    public projectSnapshotReportSortBy: string;\n    public projectDetailsReportSortBy: string;\n    public paginationSnapshotModel : PaginationModel;\n    public paginationDetailsModel : PaginationModel;\n    public visitsMonths = [];\n    public currentMonth: string = \"All\";\n    public detailsSrNo : number = 1;\n    public snapshotSrNo : number = 1;\n    public projectSnapshotReportSortByReverse : boolean = true; \n    public projectDetailsReportSortByReverse : boolean = true;\n    public taggedProject : number;\n    public virtualState : string;\n    public monthOfCloser:string;\n    public zoneList = [];\n    public zone:string;\n\n    public detailsExcel: boolean = false;\n    public snapshotExcel: boolean = false;\n    public currentImageUrl : string = '';\n    public projectReportFromDate : any;\n    public projectReportToDate : any;\n    public errorImage : string = 'https://kwspecialties.on.ca/wp-content/uploads/2014/07/no-image.png';\n    public en : any;\n    public isSalesBDE: boolean = false;\n    public excelDataModelList : Array<any> = [];\n    public isShowFilters: boolean = false;\n    public isVirtualState = true;\n    public ishotWarmCode = false\n    public role:string;\n\n    public virtualCity = [];\n\n\n    public myDatePickerOptions: IMyDpOptions = {\n        todayBtnTxt: 'Today',\n        dateFormat: 'yyyy/mm/dd',\n    };\n    \n    dt = new Date();\n    // Initialized to specific date (09.10.2018).\n    public model: any = { date: { year: this.dt.getFullYear(), month: (this.dt.getMonth()+1), day: this.dt.getDate() } };\n    \n    \n\n    constructor( private router: Router,\n        private route: ActivatedRoute,\n        private _commonService : CommonService,\n        private modalService: NgbModal,\n        private titleService: Title,        \n        private _projectReportService: ProjectReportService,\n        private _authenticationService :AuthenticationService,\n        private toastr: ToastrService,\n        private vcr: ViewContainerRef ) {                \n        this.projectReportSnapshotModelList = new Array<ProjectReportModel>();  \n        this.projectReportDetailsModelList = new Array<ProjectReportModel>();  \n        this.projectTypeList = ['Enquiry','Pipeline','Conversion','OrderLost'];\n        this.isShowProjectSummery = false;   \n        this.isShowProjectSnashot = true;\n        this.isShowProjectDetails = false;          \n        this.projectSummeryModel = new ProjectSummeryModel();\n        this.projectReportSnapshotColumnList = [];\n        this.projectReportDetailsColumnList = [];\n        this.paginationSnapshotModel = new PaginationModel();        \n        this.paginationDetailsModel = new PaginationModel();     \n        this.taggedProject = 0;            \n    }\n\n    public onDateFromChanged(event){\n        this.projectReportFromDate = event.formatted;\n    } \n    \n    public onDateEndChanged(event){\n        this.projectReportToDate = event.formatted;\n    } \n\n\n    ngOnInit() {\n        this.en = {\n            firstDayOfWeek: 0,\n            dayNames: [\"Sunday\", \"Monday\", \"Tuesday\",\"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n            dayNamesShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n            monthNames: [ \"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\" ],\n            monthNamesShort: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n        };\n        this.route.queryParams.forEach(( params: Params ) => {\n            this.getMonthsList();\n            this.currentProjectType = params['type'];\n            window.scrollTo( 0, 0 );      \n            this.currentReportName = 'Project ' + (this.currentProjectType ? this.currentProjectType : '') + ' Report';            \n            this.titleService.setTitle( this.currentReportName );            \n            this.paginationDetailsModel.TotalRecords = 0;\n            this.paginationDetailsModel.CurrentPage = 1;\n            this.paginationDetailsModel.PerPage = 10;\n            this.paginationSnapshotModel.TotalRecords = 0;\n            this.paginationSnapshotModel.CurrentPage = 1;\n            this.paginationSnapshotModel.PerPage = 10; \n            this.getProjectReportSnapshot();  \n            this.isShowProjectDetails = false;\n        });\n        let userRole = sessionStorage.getItem(\"UserRole\");\n        this.role = userRole;\n        // console.log(userRole);\n        // console.log(\"user role:- \" +userRole.toLowerCase());\n        if(userRole.toLowerCase() == 'business development executive' || userRole.toLowerCase() == 'sales'){\n            this.isSalesBDE = true;\n        }\n\n        this.virtualCity = JSON.parse(localStorage.getItem(\"virtualStateList\"));\n        this.zoneList = JSON.parse(localStorage.getItem(\"zoneList\"));\n\n    }\n\n    changeCurrentType(item : string) : void {        \n        this.router.navigateByUrl('/project-report?type='+item);\n        if(item === \"Enquiry\"){\n            this.ishotWarmCode = false;\n        }\n        else{\n            this.ishotWarmCode = true;\n        }\n    }\n\n    sortSnapshot(key : any) : void {        \n        this.projectSnapshotReportSortBy = key;\n        this.projectSnapshotReportSortByReverse = !this.projectSnapshotReportSortByReverse;\n    }\n\n    sortDetails(key : any) : void {        \n        this.projectDetailsReportSortBy = key;\n        this.projectDetailsReportSortByReverse = !this.projectDetailsReportSortByReverse;\n    }\n\n    changeSnapshotPage(event){\n        this.paginationSnapshotModel.CurrentPage = event;\n        this.getProjectReportSnapshot();\n    }\n\n    changeDetailsPage(event){\n        this.paginationDetailsModel.CurrentPage = event;\n        this.getProjectReportDetails();\n    }\n\n    getMonthsList(){\n        this._commonService.getMonthsList().subscribe(result =>{\n            if(result.Error){\n                this.toastr.error(result.ErrorMessage);\n            }\n            else\n            {\n                this.visitsMonths = result.data;\n            }\n        });\n    }\n\n    callDetailsMethod(type) : void{\n        if(type == 'excel')\n        {\n            this.detailsExcel = true;\n            this.getProjectReportDetails();            \n        }\n        else if(type == 'pdf')\n        {\n            this.toastr.info(\"Functionaity In Progress\");\n        }\n    }\n\n    callSnapshotMethod(type) : void{\n        if(type == 'excel')\n        {            \n            this.snapshotExcel = true;\n            this.getProjectReportSnapshot();            \n        }\n        else if(type == 'pdf')\n        {\n            this.toastr.info(\"Functionaity In Progress\");\n        }\n    }\n\n    resetSnapshotPagination(isSearch : number): void {\n        if(!isSearch){\n            this.searcProjectSnapshotReport = '';\n        }        \n        this.paginationSnapshotModel.TotalRecords = 100;   \n        this.paginationSnapshotModel.CurrentPage = 1;\n        this.paginationSnapshotModel.PerPage = 10;\n        this.getProjectReportSnapshot();\n    }\n\n    resetDetailsPagination(isSearch : number): void {\n        if(!isSearch){\n            this.searcProjectDetailsReport = '';\n        }                \n        this.paginationDetailsModel.TotalRecords = 100;   \n        this.paginationDetailsModel.CurrentPage = 1;\n        this.paginationDetailsModel.PerPage = 10;\n        this.getProjectReportDetails();\n    }    \n\n    updateCurrentImage(currentImage : string) : void {        \n        this.currentImageUrl = currentImage ? currentImage : this.errorImage;\n    }\n\n    open(content) {\n        this.modalService.open(content).result.then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return  `with: ${reason}`;\n        }\n    }\n\n    getProjectReportSnapshot(): void {\n        this.snapshotLoading = true;\n        // console.log(this.projectReportFromDate);\n        this.projectReportFromDate = this.projectReportFromDate ? this.projectReportFromDate : '';\n        this.projectReportToDate = this.projectReportToDate ? this.projectReportToDate : '';\n        this._projectReportService.getProjectReportDetails(this.projectReportFromDate,this.projectReportToDate,this.snapshotExcel,this.taggedProject,this.virtualState,this.zone,this.monthOfCloser,this.projectSnapshotReportSortBy,this.projectDetailsReportSortByReverse,this.searcProjectSnapshotReport,'Snapshot',this.currentMonth,this.currentProjectType,this.paginationSnapshotModel).subscribe(( result: any ) => {            \n            if(!this.snapshotExcel){\n                this.paginationSnapshotModel.TotalRecords = 0;\n                this.projectReportSnapshotModelList = [];\n                this.projectSummeryModel = null;\n                this.projectReportSnapshotColumnList = [];\n                // console.log(result);\n            }            \n            this.snapshotLoading = false;\n            if ( !result ) {\n                this.toastr.error( 'Something went wrong!!! Please try after sometime.' );\n            } else if ( result.Error ) {\n                this.toastr.error(result.ErrorMessage);\n            } else {                 \n                this.snapshotSrNo = ((this.paginationSnapshotModel.CurrentPage - 1 ) * this.paginationSnapshotModel.PerPage);\n                if(this.snapshotExcel){\n                    this.snapshotExcel = false;\n                    this.excelDataModelList = [];\n                    this.excelDataModelList.push(result.Columns);\n                    result.ArrayData.forEach(element => {\n                        this.excelDataModelList.push(element);\n                    }); \n                    this._authenticationService.exportFunction(\"ProjectSnapshotReport.xlsx\",this.excelDataModelList);\n                }\n                else{\n                    this.toastr.success(result.SuccessMessage);\n                    this.paginationSnapshotModel.TotalRecords = result.TotalRecords;\n                    this.projectReportSnapshotModelList = result.ArrayData;\n                    this.projectSummeryModel = result.Summery;\n                    this.projectReportSnapshotColumnList = result.Columns;                \n                }                \n            }\n        });\n    }\n\n    getProjectReportDetails(): void {\n        this.detailsLoading = true;\n        this.projectReportFromDate = this.projectReportFromDate ? this.projectReportFromDate : '';\n        this.projectReportToDate = this.projectReportToDate ? this.projectReportToDate : '';\n        this._projectReportService.getProjectReportDetails(this.projectReportFromDate,this.projectReportToDate,this.detailsExcel,this.taggedProject,this.virtualState,this.zone,this.monthOfCloser,this.projectDetailsReportSortBy,this.projectSnapshotReportSortByReverse,this.searcProjectDetailsReport,'Details',this.currentMonth,this.currentProjectType,this.paginationDetailsModel).subscribe(( result: any ) => {\n            if(!this.detailsExcel){\n                this.paginationDetailsModel.TotalRecords = 0;\n                this.projectReportDetailsModelList = [];            \n                this.projectReportDetailsColumnList = [];\n            }            \n            this.detailsLoading = false;\n            if ( !result ) {\n                this.toastr.error( 'Something went wrong!!! Please try after sometime.' );\n            } else if ( result.Error ) {\n                this.toastr.error(result.ErrorMessage);\n            } else {           \n                this.detailsSrNo = ((this.paginationDetailsModel.CurrentPage - 1 ) * this.paginationDetailsModel.PerPage);\n                if(this.detailsExcel){\n                    this.detailsExcel = false;\n                    this.excelDataModelList = [];\n                    this.excelDataModelList.push(result.Columns);                    \n                    result.ArrayData.forEach(element => {\n                        this.excelDataModelList.push(element);\n                    });\n                    this._authenticationService.exportFunction(\"ProjectDetailsReport.xlsx\",this.excelDataModelList);                \n                }\n                else{\n                    this.toastr.success(result.SuccessMessage);\n                    this.paginationDetailsModel.TotalRecords = result.TotalRecords;\n                    this.projectReportDetailsModelList = result.ArrayData;                \n                    this.projectReportDetailsColumnList = result.Columns;\n                }                \n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/project-report/component/project-report.component.ts","export class ProjectSummeryModel {\n    public EnquiryValueThisMonthNo : string;\n    public EnquiryValueThisMonthValue : string;\n    public EnquiryValueThisFiscalPeriodNo : string;\n    public EnquiryValueThisFiscalPeriodValue : string;\n    public TotalEnquiryNo : string;\n    public TotalEnquiryValue : string;\n\n    public PipelineValueThisMonthNo : string;\n    public PipelineValueThisMonthValue : string;        \n    public PipelineValueThisFiscalPeriodNo : string;    \n    public PipelineValueThisFiscalPeriodValue : string;\n    public TotalPipelineNo : string;\n    public TotalPipelineValue : string;    \n\n    public LostValueThisMonthNo : string;\n    public LostValueThisMonthValue : string;\n    public LostValueThisFiscalPeriodNo : string;\n    public LostValueThisFiscalPeriodValue : string;\n    public TotalLostNo : string;\n    public TotalLostValue : string;\n    \n    public ConversionValueThisMonthNo : string;\n    public ConversionValueThisMonthValue : string;\n    public ConversionValueThisFiscalPeriodNo : string;    \n    public ConversionValueThisFiscalPeriodValue : string;    \n    public TotalConversionNo : string;\n    public TotalConversionValue : string;\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/project-report/model/project-summery.model.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectReportComponent } from './component/project-report.component';\n\nconst routes: Routes = [\n    { path: '', component: ProjectReportComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProjectReportRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/project-report/project-report-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbPaginationModule, NgbModule, NgbPaginationConfig, NgbCarouselModule, NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { ProjectReportRoutingModule } from './project-report-routing.module';\nimport { ProjectReportComponent } from './component/project-report.component';\nimport { PageHeaderModule } from '../../../shared';\nimport { ProjectReportService } from './service/project-report.service';\nimport { ToastrModule } from 'toastr-ng2';\nimport { LoadingModule } from 'ngx-loading';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\nimport { MyDatePickerModule } from 'mydatepicker';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NgbCarouselModule.forRoot(),\n        NgbAlertModule.forRoot(),        \n        ProjectReportRoutingModule,\n        ToastrModule.forRoot(), // ToastrModule added \n        LoadingModule,       \n        NgbModule.forRoot(), \n        NgbPaginationModule,         \n        FormsModule,        \n        Ng2OrderModule,        \n        PageHeaderModule,\n        MyDatePickerModule\n    ],\n    declarations: [\n        ProjectReportComponent\n    ],\n    providers:[NgbPaginationConfig]\n})\n\nexport class ProjectReportModule { }\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/project-report/project-report.module.ts","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions, Response, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { Constants } from '../../../../shared/constants/constants';\nimport 'rxjs/Rx';\nimport { PaginationModel } from '../../../../shared/model/pagination.model';\n\n@Injectable()\nexport class ProjectReportService {\n    private getProjectReportUrl: string;\n    private loggedInEmployeeId : string;\n    private loggedInUserRole : string;\n    constructor( private http: Http ) {                \n        this.getProjectReportUrl = Constants.ServerUrl + 'ProjectReport/fetchProjectReportUsingStage';\n        this.loggedInEmployeeId = sessionStorage.getItem(\"EmployeeId\");\n        this.loggedInUserRole = sessionStorage.getItem(\"UserRole\");\n    }\n\n    public getProjectReportDetails(fromDate : string,toDate: string,excel,taggedProject,virtualState,zone,monthOfClosure,sortkey,sortOrder,searchText,reportSectionType,currentMonth : string,currentReportType : any,_paginationModel: PaginationModel): any {\n        let url = this.getProjectReportUrl;\n        let selectedUser = sessionStorage.getItem(\"selectedUser\") ? sessionStorage.getItem(\"selectedUser\") : null;\n        let data = [{\"LoggedInEmployeeId\":this.loggedInEmployeeId},\n                    {\"LoggedInUserRole\":this.loggedInUserRole},\n                    {\"CurrentReportType\":currentReportType},\n                    {\"CurrentPage\":_paginationModel.CurrentPage},\n                    {\"PerPage\":_paginationModel.PerPage},\n                    {\"currentMonth\":currentMonth},\n                    {\"searchText\":searchText},\n                    {\"selectedUser\":selectedUser},\n                    {\"selectedUserID\": selectedUser},\n                    {\"fromDate\":fromDate},\n                    {\"toDate\":toDate},\n                    {\"Sortkey\":sortkey},\n                    {\"excel\":excel},\n                    {\"TaggedProject\":taggedProject},\n                    {\"virtual_city\":virtualState},\n                    {\"zone\":zone},\n                    {\"month_of_closure\":monthOfClosure},\n                    {\"sortOrder\":sortOrder},\n                    {\"reportSectionType\":reportSectionType}]; \n        \n        console.log(data);            \n                    \n        let headers = null;        \n        headers = new Headers({ 'Content-Type': 'application/json','Cache-Control':'no-cache','Pragma':'no-cache' });        \n        let options = new RequestOptions({ headers: headers });    \n        return this.http.post(url, data, options)\n        .map(res =>  this.extractData(res)\n         )\n        .share();\n    }    \n\n    private extractData( res: Response ) {\n        console.log( \"Response:\",res );\n        let body = res.json();\n        return body || {};\n    }\n    \n    downloadFile(data: any){\n        var blob = new Blob([data], { type: 'application/vnd.ms-excel' });\n        var url = window.URL.createObjectURL(blob);\n        window.open(url);\n    }    \n}\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/project-report/service/project-report.service.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".grid {\\n  position: relative; }\\n\\n.grid-item {\\n  position: absolute; }\\n\\n.grid-item.moving {\\n  z-index: z-index1; }\\n\\n.placeholder {\\n  position: absolute; }\\n\\n.btn-border:hover {\\n  border: 1px solid #31B0D5; }\\n\\n.image-center {\\n  margin: 0 auto;\\n  display: block; }\\n\\n.modal-body {\\n  overflow: auto !important; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/project-report/styles/project-report.component.scss\n// module id = ../../../../../src/app/layout/reports/project-report/styles/project-report.component.scss\n// module chunks = 11","module.exports = \"<div [@routerTransition]>\\n    <app-page-header [heading]=\\\"currentReportName\\\" [icon]=\\\"'fa-users'\\\"></app-page-header> \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-12\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-block\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                            <a class=\\\"btn col-sm-2 btn-border btn-sm\\\" *ngFor=\\\"let item of projectTypeList\\\" [ngClass]=\\\"{'btn-info' : currentProjectType == item }\\\" (click)=\\\"changeCurrentType(item)\\\">{{ item }}</a>\\n                        </div>                        \\n                        <div class=\\\"col-sm-2\\\" *ngIf=\\\"true==false\\\">\\n                            <select class=\\\"form-control\\\" name=\\\"currentMonth\\\"\\n                                id=\\\"currentMonth\\\" [(ngModel)]=\\\"currentMonth\\\"\\n                                (change)=\\\"getProjectReportSnapshot()\\\">\\n                                <option value=\\\"All\\\">All</option>\\n                                <option *ngFor=\\\"let item of visitsMonths\\\" value=\\\"{{ item }}\\\">{{ item }}</option>\\n                            </select>\\n                        </div>                                                \\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\" >\\n        <div class=\\\"col col-sm-12\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-block\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-11\\\">\\n                            <h4>Filters</h4>\\n                        </div>\\n                        <div class=\\\"col-sm-1\\\" *ngIf=\\\"!isShowFilters\\\">\\n                            <button (click)=\\\"isShowFilters = true;\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\n                        </div>\\n                        <div class=\\\"col-sm-1\\\" *ngIf=\\\"isShowFilters\\\">\\n                            <button (click)=\\\"isShowFilters = false;\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-minus\\\"></i></button>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" *ngIf=\\\"isShowFilters\\\">\\n                        <!-- <div class=\\\"col-sm-1\\\">\\n                            \\n                        </div> -->\\n                        <div class=\\\"col-sm-2\\\">\\n                                <h6>From Date</h6>\\n                                <my-date-picker name=\\\"projectReportFromDate\\\" placeholder=\\\"yyyy/mm/dd\\\" [options]=\\\"myDatePickerOptions\\\"\\n                                (dateChanged)=\\\"onDateFromChanged($event)\\\"></my-date-picker>\\n                          <!--   <owl-date-time [(ngModel)]=\\\"projectReportFromDate\\\" \\n                            [type]=\\\"'calendar'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[dataType]=\\\"'date'\\\"\\n                            [autoClose]=\\\"true\\\"\\n                            [dateFormat]=\\\"'YYYY/MM/DD'\\\"\\n                            [placeHolder]=\\\"'YYYY/MM/DD'\\\"\\n                            [hourFormat]=\\\"'12'\\\"\\n                            [selectionMode]=\\\"'single'\\\"\\n                            name=\\\"projectReportFromDate\\\"\\n                            [locale]=\\\"en\\\"></owl-date-time>    -->                                             \\n                        </div>\\n                       <!--  <div class=\\\"col-sm-1\\\">\\n                            <h6>To Date</h6>\\n                        </div> -->\\n                        <div class=\\\"col-sm-2\\\">\\n                                <h6>To Date</h6>\\n                                <my-date-picker name=\\\"projectReportToDate\\\" placeholder=\\\"yyyy/mm/dd\\\" [options]=\\\"myDatePickerOptions\\\"\\n                                (dateChanged)=\\\"onDateEndChanged($event)\\\"></my-date-picker>\\n                           <!--  <owl-date-time [(ngModel)]=\\\"projectReportToDate\\\" \\n                            [type]=\\\"'calendar'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[dataType]=\\\"'date'\\\"\\n                            [autoClose]=\\\"true\\\"\\n                            [dateFormat]=\\\"'YYYY/MM/DD'\\\"\\n                            [placeHolder]=\\\"'YYYY/MM/DD'\\\"\\n                            [hourFormat]=\\\"'12'\\\"\\n                            [selectionMode]=\\\"'single'\\\"\\n                            name=\\\"projectReportToDate\\\" \\n                            [locale]=\\\"en\\\"></owl-date-time>             -->                                    \\n                        </div>   \\n                        <div class=\\\"col-sm-2\\\">\\n                            <h6 style=\\\"color: transparent\\\">Select Project</h6>\\n                            <select class=\\\"form-control\\\" name=\\\"taggedProject\\\"\\n                                    id=\\\"taggedProject\\\" [(ngModel)]=\\\"taggedProject\\\"\\n                                    (change)=\\\"getProjectReportSnapshot()\\\">\\n                                    <option value=\\\"0\\\">All Projects</option>\\n                                    <option value=\\\"1\\\">Tagged Project</option>\\n                                    <option value=\\\"2\\\">Self Created Project</option>\\n                            </select>\\n                        </div>\\n                               \\n                        <div class=\\\"col-md-2\\\">\\n                            <h6 style=\\\"color: transparent\\\">Select Virtual City</h6>\\n                            <select class=\\\"form-control\\\" name=\\\"virtualState\\\"\\n                            id=\\\"virtualState\\\" [(ngModel)]=\\\"virtualState\\\"\\n                                (change)=\\\"getProjectReportSnapshot()\\\">\\n                                <option [ngValue]=\\\"undefined\\\">Select Virtual State</option>  \\n                                <option *ngFor=\\\"let virtual of virtualCity\\\" value=\\\"{{virtual.VIRTUAL_CITY}}\\\">{{virtual.VIRTUAL_CITY}}</option>                         \\n                            </select>\\n                        </div>\\n                        <div class=\\\"col-md-2\\\" *ngIf=\\\"role === 'BDM_HEAD' || role === 'HINDWARE_ZM' || role === 'LIFESTYLE_ZM' || role === 'Hindware_NSM' || role === 'Hindware_PR' ||role === 'Administrator' || role === 'HINDWARE_HH'\\\">\\n                            <h6 style=\\\"color: transparent\\\">Select Zone</h6>\\n                            <select class=\\\"form-control\\\" name=\\\"zone\\\"\\n                            id=\\\"zone\\\" [(ngModel)]=\\\"zone\\\"\\n                                (change)=\\\"getProjectReportSnapshot()\\\">\\n                                <option [ngValue]=\\\"undefined\\\">Select Zone</option>  \\n                                <option *ngFor=\\\"let z of zoneList\\\" value=\\\"{{z.ZONE}}\\\">{{z.ZONE}}</option>                         \\n                            </select>\\n                        </div>   \\n                        <div class=\\\"col-md-2\\\" *ngIf=\\\"ishotWarmCode\\\">\\n                                <h6 style=\\\"color: transparent\\\">Month Of Closure</h6>\\n                                <select class=\\\"form-control\\\" name=\\\"monthOfCloser\\\"\\n                                id=\\\"monthOfCloser\\\" [(ngModel)]=\\\"monthOfCloser\\\"\\n                                    (change)=\\\"getProjectReportSnapshot()\\\">\\n                                    <option [ngValue]=\\\"undefined\\\">Select Month Of Closure</option>  \\n                                    <option value=\\\"HOT (0-3 Months)\\\">HOT (0-3 Months)</option>    \\n                                    <option value=\\\"WARM (3-6 Months)\\\">WARM (3-6 Months)</option>      \\n                                    <option value=\\\"COLD (6-12 Months)\\\">COLD (6-12 Months)</option>               \\n                                </select>\\n                            </div>            \\n                        <div class=\\\"col-sm-2\\\">\\n                            <h6 style=\\\"color: transparent\\\">Get Report</h6>\\n                            <button type=\\\"button\\\"\\n                                (click)=\\\"getProjectReportSnapshot()\\\"\\n                                class=\\\"btn btn-sm btn-info\\\">Get Report</button>\\n                        </div>                        \\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>   \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-12\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-block\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-10\\\">\\n                            <h5>Project {{ currentProjectType }} Summary</h5>\\n                        </div>                                               \\n                        <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isShowProjectSummery\\\">\\n                            <button (click)=\\\"isShowProjectSummery = true\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\" *ngIf=\\\"isShowProjectSummery\\\">\\n                            <button (click)=\\\"isShowProjectSummery = false\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-minus\\\"></i></button>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"isShowProjectSummery\\\">\\n                        <table class=\\\"table table-bordered\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th></th>\\n                                    <th class=\\\"text-center\\\">No. of Projects</th>\\n                                    <th class=\\\"text-center\\\">Value (in Lacs)</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngIf=\\\"currentProjectType == 'Conversion'\\\">\\n                                    <th>Conversion Value Current month</th>\\n                                    <td class=\\\"text-center\\\">{{ projectSummeryModel?.ConversionThisMonthNo }}</td>\\n                                    <td class=\\\"text-right\\\">{{ projectSummeryModel?.ConversionThisMonthValue}}</td>\\n                                </tr>\\n                                <tr *ngIf=\\\"currentProjectType == 'Conversion'\\\">\\n                                    <th>Conversion Value Current fiscal period</th>\\n                                    <td class=\\\"text-center\\\">{{ projectSummeryModel?.ConversionThisFiscalPeriodNo }}</td>\\n                                    <td class=\\\"text-right\\\">{{ projectSummeryModel?.ConversionThisFiscalPeriodValue}}</td>\\n                                </tr>\\n                                <tr *ngIf=\\\"currentProjectType == 'Conversion'\\\">\\n                                    <th>Total Conversion</th>\\n                                    <td class=\\\"text-center\\\">{{ projectSummeryModel?.TotalConversionNo}}</td>\\n                                    <td class=\\\"text-right\\\">{{ projectSummeryModel?.TotalConversionValue}}</td>\\n                                </tr>\\n                                <tr *ngIf=\\\"currentProjectType == 'Enquiry'\\\">\\n                                    <th>Enquiry Value Current month</th>\\n                                    <td class=\\\"text-center\\\">{{ projectSummeryModel?.EnquiryThisMonthNo}}</td>\\n                                    <td class=\\\"text-right\\\">{{ projectSummeryModel?.EnquiryThisMonthValue}}</td>\\n                                </tr>\\n                                <tr *ngIf=\\\"currentProjectType == 'Enquiry'\\\">\\n                                    <th>Enquiry Value Current fiscal period</th>\\n                                    <td class=\\\"text-center\\\">{{ projectSummeryModel?.EnquiryThisFiscalPeriodNo}}</td>\\n                                    <td class=\\\"text-right\\\">{{ projectSummeryModel?.EnquiryThisFiscalPeriodValue}}</td>\\n                                </tr>\\n                                <tr *ngIf=\\\"currentProjectType == 'Enquiry'\\\">\\n                                    <th>Total Enquiry</th>\\n                                    <td class=\\\"text-center\\\">{{ projectSummeryModel?.TotalEnquiryNo}}</td>\\n                                    <td class=\\\"text-right\\\">{{ projectSummeryModel?.TotalEnquiryValue}}</td>\\n                                </tr>\\n                                <tr *ngIf=\\\"currentProjectType == 'Pipeline'\\\">\\n                                    <th>Pipeline Value Current month</th>\\n                                    <td class=\\\"text-center\\\">{{ projectSummeryModel?.PipelineThisMonthNo}}</td>\\n                                    <td class=\\\"text-right\\\">{{ projectSummeryModel?.PipelineThisMonthValue}}</td>\\n                                </tr>\\n                                <tr *ngIf=\\\"currentProjectType == 'Pipeline'\\\">\\n                                    <th>Pipeline Value Current fiscal period</th>\\n                                    <td class=\\\"text-center\\\">{{ projectSummeryModel?.PipelineThisFiscalPeriodNo}}</td>\\n                                    <td class=\\\"text-right\\\">{{ projectSummeryModel?.PipelineThisFiscalPeriodValue}}</td>\\n                                </tr>\\n                                <tr *ngIf=\\\"currentProjectType == 'Pipeline'\\\">\\n                                    <th>Total Pipeline</th>\\n                                    <td class=\\\"text-center\\\">{{ projectSummeryModel?.TotalPipelineNo}}</td>\\n                                    <td class=\\\"text-right\\\">{{ projectSummeryModel?.TotalPipelineValue}}</td>\\n                                </tr>\\n                                <tr *ngIf=\\\"currentProjectType == 'OrderLost'\\\">\\n                                    <th>Order Lost Value Current month</th>\\n                                    <td class=\\\"text-center\\\">{{ projectSummeryModel?.LostThisMonthNo}}</td>\\n                                    <td class=\\\"text-right\\\">{{ projectSummeryModel?.LostThisMonthValue}}</td>\\n                                </tr>\\n                                <tr *ngIf=\\\"currentProjectType == 'OrderLost'\\\">\\n                                    <th>Order Lost Value Current fiscal period</th>\\n                                    <td class=\\\"text-center\\\">{{ projectSummeryModel?.LostThisFiscalPeriodNo}}</td>\\n                                    <td class=\\\"text-right\\\">{{ projectSummeryModel?.LostThisFiscalPeriodValue}}</td>\\n                                </tr>\\n                                <tr *ngIf=\\\"currentProjectType == 'OrderLost'\\\">\\n                                    <th>Total Order Lost</th>\\n                                    <td class=\\\"text-center\\\">{{ projectSummeryModel?.TotalLostNo}}</td>\\n                                    <td class=\\\"text-right\\\">{{ projectSummeryModel?.TotalLostValue}}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\" >\\n        <div class=\\\"col col-sm-12\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-block\\\">\\n                    <ng-container >\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-7\\\">\\n                                <h5>Project {{ currentProjectType }} Snapshot</h5>\\n                            </div>\\n                            <div class=\\\"col-sm-2\\\">\\n                                <input type=\\\"text\\\" id=\\\"searcProjectSnapshotReport\\\" name=\\\"searcProjectSnapshotReport\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"searcProjectSnapshotReport\\\" class=\\\"form-control\\\">\\n                            </div>\\n                            <div class=\\\"col-sm-1\\\">\\n                                <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"resetSnapshotPagination(1)\\\">Search</button>\\n                            </div>\\n                            <div class=\\\"col-sm-1\\\">\\n                                <button (click)=\\\"callSnapshotMethod('excel')\\\" class=\\\"btn btn-info btn-sm\\\">EXCEL</button>\\n                            </div>\\n                            <div class=\\\"col-sm-1\\\" *ngIf=\\\"true==false\\\">\\n                                <button (click)=\\\"callSnapshotMethod('pdf')\\\" class=\\\"btn btn-info btn-sm\\\">PDF</button>\\n                            </div>\\n                            <div class=\\\"col-sm-1\\\" *ngIf=\\\"!isShowProjectSnashot\\\">\\n                                <button (click)=\\\"isShowProjectSnashot = true\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\n                                </div>\\n                            <div class=\\\"col-sm-1\\\" *ngIf=\\\"isShowProjectSnashot\\\">\\n                                <button (click)=\\\"isShowProjectSnashot = false\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-minus\\\"></i></button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"table-responsive\\\" style=\\\"background-color: #FFF;\\\" *ngIf=\\\"isShowProjectSnashot\\\">                            \\n                            <table class=\\\"table table-bordered table-fixed\\\" style=\\\"background-color: #fff;\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th>Sr No</th>\\n                                        <th *ngFor=\\\"let columnItem of projectReportSnapshotColumnList\\\" (click)=\\\"sortSnapshot(columnItem)\\\">{{ columnItem }} &nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"projectSnapshotReportSortBy ==columnItem \\\"  [ngClass]=\\\"{'fa-sort-asc':projectSnapshotReportSortByReverse,'fa-sort-desc':!projectSnapshotReportSortByReverse}\\\"></span></th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let rowItem of  projectReportSnapshotModelList;let snapshotIdx = index;\\\">\\n                                        <td>{{ snapshotSrNo + snapshotIdx + 1 }}</td>\\n                                        <td *ngFor=\\\"let dataItem of rowItem;let idx = index\\\">\\n                                            <ng-container *ngIf=\\\"(idx == 15 && currentProjectType == 'Conversion') || ((idx == 15 || idx == 16 || idx == 17) && currentProjectType == 'Pipeline')\\\">\\n                                                <a (click)=\\\"updateCurrentImage(dataItem);open(content)\\\">\\n                                                    <img src=\\\"{{ dataItem || errorImage }}\\\" width=\\\"100\\\">\\n                                                </a>\\n                                            </ng-container>\\n                                            <ng-container *ngIf=\\\"!((idx == 15 && currentProjectType == 'Conversion') || ((idx == 15 || idx == 16 || idx == 17) && currentProjectType == 'Pipeline'))\\\">\\n                                                <span *ngIf=\\\"dataItem && dataItem != 'null'\\\">\\n                                                    {{ dataItem }}\\n                                                </span>                                                                                                \\n                                                <span *ngIf=\\\"dataItem && dataItem == 'null'\\\">-</span>\\n                                                <span *ngIf=\\\"!dataItem\\\">-</span>\\n                                            </ng-container>\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                            <ngb-pagination [collectionSize]=\\\"paginationSnapshotModel.TotalRecords\\\" \\n                                        (pageChange)=\\\"changeSnapshotPage($event)\\\" \\n                                        [(page)]=\\\"paginationSnapshotModel.CurrentPage\\\" \\n                                        [maxSize]=\\\"paginationSnapshotModel.PerPage\\\" \\n                                        [rotate]=\\\"true\\\" [ellipses]=\\\"false\\\" \\n                                        [boundaryLinks]=\\\"true\\\" size=\\\"sm\\\"></ngb-pagination>                            \\n                        </div>\\n                    </ng-container>                    \\n                </div>\\n            </div>\\n        </div>\\n        <ngx-loading [show]=\\\"snapshotLoading\\\" [config]=\\\"{ backdropBorderRadius: '0px' }\\\"></ngx-loading>\\n    </div>\\n    <div class=\\\"row\\\" >\\n            <div class=\\\"col col-sm-12\\\">\\n                <div class=\\\"card mb-3\\\">\\n                    <div class=\\\"card-block\\\">\\n                        <ng-container >\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-7\\\">\\n                                    <h5>Project {{ currentProjectType }} Details</h5>\\n                                </div>\\n                                <div class=\\\"col-sm-2\\\">\\n                                    <input type=\\\"text\\\" id=\\\"searcProjectDetailsReport\\\" name=\\\"searcProjectDetailsReport\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"searcProjectDetailsReport\\\" class=\\\"form-control\\\">\\n                                </div>\\n                                <div class=\\\"col-sm-1\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\"  (click)=\\\"resetDetailsPagination(1)\\\">Search</button>\\n                                </div>\\n                                <div class=\\\"col-sm-1\\\">\\n                                    <button (click)=\\\"callDetailsMethod('excel')\\\" class=\\\"btn btn-info btn-sm\\\">EXCEL</button>\\n                                </div>\\n                                <div class=\\\"col-sm-1\\\" *ngIf=\\\"true==false\\\">\\n                                    <button (click)=\\\"callDetailsMethod('pdf')\\\" class=\\\"btn btn-info btn-sm\\\">PDF</button>\\n                                </div>\\n                                <div class=\\\"col-sm-1\\\" *ngIf=\\\"!isShowProjectDetails\\\">\\n                                    <button (click)=\\\"isShowProjectDetails = true;getProjectReportDetails();\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\n                                </div>\\n                                <div class=\\\"col-sm-1\\\" *ngIf=\\\"isShowProjectDetails\\\">\\n                                    <button (click)=\\\"isShowProjectDetails = false;\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-minus\\\"></i></button>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"table-responsive\\\" style=\\\"background-color: #FFF;\\\" *ngIf=\\\"isShowProjectDetails\\\">\\n                                <table class=\\\"table table-bordered table-fixed\\\" style=\\\"background-color: #fff;\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th>Sr No</th>\\n                                            <th *ngFor=\\\"let columnItem of projectReportDetailsColumnList\\\" > <span style=\\\"text-transform: capitalize !important;\\\"> {{ columnItem.split('_').join(' ') }} </span></th>\\n                                            <!-- (click)=\\\"sortDetails(columnItem)\\\"  &nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"projectDetailsReportSortBy ==columnItem \\\"  [ngClass]=\\\"{'fa-sort-asc':projectDetailsReportSortByReverse,'fa-sort-desc':!projectDetailsReportSortByReverse}\\\"></span> -->\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr *ngFor=\\\"let rowItem of  projectReportDetailsModelList;let detailsIdx = index;\\\">\\n                                                <td>{{ detailsSrNo + detailsIdx + 1 }}</td>\\n                                            <td *ngFor=\\\"let dataItem of rowItem;let idx = index\\\">\\n                                                <ng-container *ngIf=\\\"(currentProjectType == 'Pipeline' && (idx == 50 || idx == 51 || idx == 52)) || (currentProjectType == 'Conversion' && idx == 42)\\\">\\n                                                    <a (click)=\\\"updateCurrentImage(dataItem);open(content)\\\">\\n                                                        <img src=\\\"{{ dataItem || errorImage }}\\\" width=\\\"100\\\">\\n                                                    </a>\\n                                                </ng-container>\\n                                                <ng-container *ngIf=\\\"!((currentProjectType == 'Pipeline' && (idx == 50 || idx == 51 || idx == 52)) || (currentProjectType == 'Conversion' && idx == 42))\\\">\\n                                                    <span *ngIf=\\\"dataItem && dataItem != 'null'\\\">\\n                                                        {{ dataItem }}\\n                                                    </span>\\n                                                    <span *ngIf=\\\"dataItem && dataItem == 'null'\\\">-</span>\\n                                                    <span *ngIf=\\\"!dataItem\\\">-</span>\\n                                                </ng-container>                                                                                             \\n                                            </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                                <ngb-pagination [collectionSize]=\\\"paginationDetailsModel.TotalRecords\\\" \\n                                            (pageChange)=\\\"changeDetailsPage($event)\\\" \\n                                            [(page)]=\\\"paginationDetailsModel.CurrentPage\\\" \\n                                            [maxSize]=\\\"paginationDetailsModel.PerPage\\\" \\n                                            [rotate]=\\\"true\\\" [ellipses]=\\\"false\\\" \\n                                            [boundaryLinks]=\\\"true\\\" size=\\\"sm\\\"></ngb-pagination>                            \\n                            </div>\\n                        </ng-container>                    \\n                    </div>\\n                </div>\\n            </div>\\n            <ngx-loading [show]=\\\"detailsLoading\\\" [config]=\\\"{ backdropBorderRadius: '0px' }\\\"></ngx-loading>\\n        </div>\\n</div>\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\t\\t\\n    <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Image Preview</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">        \\n            <img class=\\\"text-center\\\" class=\\\"image-center\\\" src=\\\"{{ currentImageUrl }}\\\">\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n        </div>\\t\\t\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/project-report/template/project-report.component.html\n// module id = ../../../../../src/app/layout/reports/project-report/template/project-report.component.html\n// module chunks = 11"],"sourceRoot":"webpack:///"}