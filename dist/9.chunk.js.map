{"version":3,"sources":["D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/user-perfromance-report/component/user-perfromance-report.component.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/user-perfromance-report/model/user-performance-report.model.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/user-perfromance-report/service/user-perfromance-report.service.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/user-perfromance-report/styles/user-perfromance-report.component.scss","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/user-perfromance-report/template/user-perfromance-report.component.html","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/user-perfromance-report/user-perfromance-report-routing.module.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/user-perfromance-report/user-perfromance-report.module.ts"],"names":[],"mappings":"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","file":"9.chunk.js","sourcesContent":["import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { routerTransition } from '../../../../router.animations';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { UserPerfromanceReportService } from '../service/user-perfromance-report.service';\nimport { ToastrService } from 'toastr-ng2';\nimport { UserPerformanceReportModel } from '../model/user-performance-report.model';\nimport { AuthenticationModel } from '../../../../authentication/authentication.model';\nimport { AuthenticationService } from '../../../../authentication/authentication.service';\nimport { CurrencyPipe } from '@angular/common';\nimport { CommonService } from '../../../../shared/services/common.service';\nimport { PaginationModel } from '../../../../shared/model/pagination.model';\n\n@Component({\n    selector: 'app-user-performance-report',\n    templateUrl: '../template/user-perfromance-report.component.html',\n    styleUrls: ['../styles/user-perfromance-report.component.scss'],\n    animations: [routerTransition()],\n    providers: [UserPerfromanceReportService,ToastrService,AuthenticationService,CurrencyPipe,CommonService]\n})\n\nexport class UserPerfromanceReportComponent implements OnInit {\n    public currentReport: string;\n    public currentType: string;    \n    public userPerformanceReportModelList : Array<UserPerformanceReportModel>;    \n    public userList : AuthenticationModel;\n    public currentFinancialYear : string;\n    public currentTypeUser : string;\n    public financialYearList : Array<any>;\n    public brandList : Array<any>;\n    public loading = false;        \n    public key: string;\n    public reverse: boolean = false;   \n    public paginationModel : PaginationModel; \n    constructor( private router: Router,\n        private _commonService : CommonService,\n        private _currencyPipe : CurrencyPipe,\n        private route: ActivatedRoute,\n        private _authenticationService : AuthenticationService,\n        private titleService: Title,\n        private reportService: UserPerfromanceReportService,\n        private toastr: ToastrService) {                \n        this.userList = new AuthenticationModel();\n        this.brandList = [];\n        this.paginationModel = new PaginationModel();\n    }\n\n    ngOnInit() {    \n        this.getBrandList();\n        this.route.queryParams.forEach(( params: Params ) => {\n            this.currentType = params['type'];            \n            this.currentReport = 'User Perfromance Report: ' + this.currentType;\n            this.titleService.setTitle(this.currentReport);\n            window.scrollTo( 0, 0 );\n            this.getFinancialYearList();\n            this.currentFinancialYear = '-1';\n            this.currentTypeUser = '-1';\n            this.userPerformanceReportModelList = new Array<UserPerformanceReportModel>();\n            if(this.currentType)\n            {\n                this.getUserPerfromanceUsersList();                \n            }\n        });\n    }   \n\n    sort(key : any) : void {\n        this.key = key;\n        this.reverse = !this.reverse;\n    }    \n    \n    callMethod(type) : void{\n        if(type == 'excel')\n        {\n            let fileName = \"UserPerformanceReport.xlsx\";            \n            this._authenticationService.exportFunction(fileName,this.userPerformanceReportModelList);\n        }        \n        else if(type == 'pdf')\n        {\n            this.toastr.info(\"Functionaity In Progress\");\n        }\n    }\n\n    getUserPerfromanceReport() : void {\n        if(this.currentType != '-1'){\n            this.loading = true;\n            this.reportService.getUserPerfromanceReport(this.currentType,this.currentFinancialYear,this.currentTypeUser).subscribe(( result: any ) => {\n                this.loading = false;\n                if ( !result ) {\n                    this.toastr.error( 'Something went wrong!!! Please try after sometime.' );\n                } else if ( result.Error ) {\n                    this.toastr.error(result.ErrorMessage);\n                } else {                \n                    this.toastr.success(result.SuccessMessage);                    \n                    this.userPerformanceReportModelList = [];\n                    this.userPerformanceReportModelList = new Array<UserPerformanceReportModel>();                    \n                    for(let i=0;i<result.Data.length;i++){\n                        let _userPerformanceReportModel = new UserPerformanceReportModel();                        \n                        _userPerformanceReportModel.Username = result.Username;\n                        _userPerformanceReportModel.Month = result.Data[i].Month;\n                        _userPerformanceReportModel.NewPipelineNo = result.Data[i].NewPipelineNo;                        \n                        _userPerformanceReportModel.NewPipelineValue = this._currencyPipe.transform(result.Data[i].NewPipelineValue,'INR',false,'1.0-0');\n                        _userPerformanceReportModel.OpeningPipelineNo = result.Data[i].OpeningPipelineNo;\n                        _userPerformanceReportModel.OpeningPipelineValue = this._currencyPipe.transform(result.Data[i].OpeningPipelineValue,'INR',false,'1.0-0');\n                        _userPerformanceReportModel.LostNo = result.Data[i].LostNo;\n                        _userPerformanceReportModel.LostValue = this._currencyPipe.transform(result.Data[i].LostValue,'INR',false,'1.0-0');\n                        _userPerformanceReportModel.EnquiryNo = result.Data[i].EnquiryNo;\n                        _userPerformanceReportModel.EnquiryValue = this._currencyPipe.transform(result.Data[i].EnquiryValue,'INR',false,'1.0-0');\n                        _userPerformanceReportModel.FromNewValue = this._currencyPipe.transform(result.Data[i].FromNewValue,'INR',false,'1.0-0');\n                        _userPerformanceReportModel.FromNewNo = result.Data[i].FromNewNo;\n                        _userPerformanceReportModel.FromOldValue = this._currencyPipe.transform(result.Data[i].FromOldValue,'INR',false,'1.0-0');\n                        _userPerformanceReportModel.FromOldNo = result.Data[i].FromOldNo;\n                        _userPerformanceReportModel.PipelineBankValue = this._currencyPipe.transform(result.Data[i].PipelineBankValue,'INR',false,'1.0-0');\n                        _userPerformanceReportModel.CummBalanceValue = this._currencyPipe.transform(result.Data[i].CummBalanceValue,'INR',false,'1.0-0');\n                        this.userPerformanceReportModelList.push(_userPerformanceReportModel);\n                    }                    \n                }\n            });        \n        }\n    }\n\n    getUserPerfromanceUsersList() : void {\n        this.reportService.getUserPerformanceReportUserList(this.currentType).subscribe(( result: any ) => {                        \n            if ( !result ) {\n                this.toastr.error( 'Something went wrong!!! Please try after sometime.' );\n            } else if ( result.Error ) {\n                this.toastr.error(result.ErrorMessage);\n            } else {                                \n                this.userList = result.Data;\n            }\n        });        \n    }\n\n    getFinancialYearList() : void {\n        this.reportService.getFinancialYearList().subscribe(( result: any ) => {                        \n            if ( !result ) {\n                this.toastr.error( 'Something went wrong!!! Please try after sometime.' );\n            } else if ( result.Error ) {\n                this.toastr.error(result.ErrorMessage);\n            } else {                                                \n                this.financialYearList = result.Data;\n            }\n        });\n    }    \n    \n    getBrandList() : void {\n        this._commonService.getBrandList().subscribe(( result: any ) => {                        \n            if ( !result ) {\n                this.toastr.error( 'Something went wrong!!! Please try after sometime.' );\n            } else if ( result.Error ) {\n                this.toastr.error(result.ErrorMessage);\n            } else {                                \n                this.brandList = result.Data;\n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/user-perfromance-report/component/user-perfromance-report.component.ts","export class UserPerformanceReportModel {\n    public Username: string;\n    public Month : string;        \n    public NewPipelineNo : string;\n    public NewPipelineValue : string;\n    public OpeningPipelineNo : string;\n    public OpeningPipelineValue : string;\n    public LostNo : string;\n    public LostValue : string;\n    public EnquiryNo : string;\n    public EnquiryValue : string;\n    public FromNewValue : string;\n    public FromNewNo : string;\n    public FromOldValue : string;\n    public FromOldNo : string;\n    public PipelineBankValue : string;\n    public CummBalanceValue : string;\n}\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/user-perfromance-report/model/user-performance-report.model.ts","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions, Response, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { Constants } from '../../../../shared/constants/constants';\nimport 'rxjs/Rx';\n\n@Injectable()\nexport class UserPerfromanceReportService {\n    private getReportsUrl: string;\n    private getUserPerformanceReportUserListUrl : string;\n    private getFinancialYearListUrl : string;    \n    private loggedInUserRole : string;\n    private loggedInEmployeeId : string;\n\n    constructor( private http: Http ) {\n        this.getReportsUrl = Constants.ServerUrl + 'UserPerformanceReport/fetchUserPerformanceData';\n        this.getUserPerformanceReportUserListUrl = Constants.ServerUrl + 'UserPerformanceReport/getUserPerformanceReportUserList';\n        this.getFinancialYearListUrl = Constants.ServerUrl + 'Commmonfunctions/getYearDetails';\n        this.loggedInEmployeeId = sessionStorage.getItem(\"EmployeeId\");        \n        this.loggedInUserRole = sessionStorage.getItem(\"UserRole\");        \n    }\n\n    public getUserPerfromanceReport(brandName : string,currentFinancialYear : string,currentUser : string): Observable<any> {         \n        let url = this.getReportsUrl;\n        let data = [{\"LoggedInEmployeeId\":this.loggedInEmployeeId},\n                    {\"LoggedInUserRole\":this.loggedInUserRole},\n                    {\"BrandName\":brandName},\n                    {\"financialYear\":currentFinancialYear},\n                    {\"UserId\":currentUser}];                    \n        let headers = new Headers({ 'Content-Type': 'application/json','Cache-Control':'no-cache','Pragma':'no-cache' });\n        let options = new RequestOptions({ headers: headers });    \n        return this.http.post(url, data, options)\n        .map(res => this.extractData(res))\n        .share();\n    }\n    \n    public getFinancialYearList(): Observable<any> {         \n        let url = this.getFinancialYearListUrl;\n        let data = [{\"LoggedInEmployeeId\":this.loggedInEmployeeId},\n                    {\"LoggedInUserRole\":this.loggedInUserRole}];                    \n        let headers = new Headers({ 'Content-Type': 'application/json','Cache-Control':'no-cache','Pragma':'no-cache' });\n        let options = new RequestOptions({ headers: headers });    \n        return this.http.post(url, data, options)\n        .map(res => this.extractData(res))\n        .share();\n    }    \n\n    public getUserPerformanceReportUserList(brandName : string): Observable<any> {        \n        let url = this.getUserPerformanceReportUserListUrl;\n        let data = [{\"LoggedInEmployeeId\":this.loggedInEmployeeId},\n                    {\"LoggedInUserRole\":this.loggedInUserRole},\n                    {\"BrandName\":brandName}];                    \n        let headers = new Headers({ 'Content-Type': 'application/json','Cache-Control':'no-cache','Pragma':'no-cache' });\n        let options = new RequestOptions({ headers: headers });    \n        return this.http.post(url, data, options)\n        .map(res => this.extractData(res))\n        .share();\n    }    \n\n    private extractData( res: Response ) {\n        console.log( res );\n        let body = res.json();\n        return body || {};\n    }\n}\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/user-perfromance-report/service/user-perfromance-report.service.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".grid {\\n  position: relative; }\\n\\n.grid-item {\\n  position: absolute; }\\n\\n.grid-item.moving {\\n  z-index: z-index1; }\\n\\n.placeholder {\\n  position: absolute; }\\n\\n.btn-border:hover {\\n  border: 1px solid #31B0D5; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/user-perfromance-report/styles/user-perfromance-report.component.scss\n// module id = ../../../../../src/app/layout/reports/user-perfromance-report/styles/user-perfromance-report.component.scss\n// module chunks = 9","module.exports = \"<div [@routerTransition]>\\n\\t<app-page-header [heading]=\\\"currentReport\\\" [icon]=\\\"'fa-file-text-o'\\\"></app-page-header>\\t\\n\\t<div class=\\\"row\\\" *ngIf=\\\"brandList && brandList.length > 0\\\">\\n\\t\\t<div class=\\\"col col-sm-12\\\">\\n\\t\\t\\t<div class=\\\"card mb-3\\\">\\n\\t\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"col-sm-2 btn bnt-link btn-border btn-sm\\\"\\n\\t\\t\\t\\t\\t\\t*ngFor=\\\"let item of brandList\\\"\\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'btn-info' : currentType == item}\\\"\\n\\t\\t\\t\\t\\t\\trouterLink=\\\"/user-performance-report\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActive]=\\\"['router-link-active']\\\"\\n\\t\\t\\t\\t\\t\\t[queryParams]=\\\"{ type: item }\\\">{{ item }}</a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"row\\\" *ngIf=\\\"currentType\\\">\\n\\t\\t<div class=\\\"col col-sm-12\\\">\\n\\t\\t\\t<div class=\\\"card mb-3\\\">\\n\\t\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-5\\\" *ngIf=\\\"userList && userList.length > 0\\\">\\n\\t\\t\\t\\t\\t\\t\\t<fieldset class=\\\"form-group\\\">\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" [(ngModel)]=\\\"currentTypeUser\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"currentTypeUser\\\" id=\\\"currentTypeUser\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"-1\\\">Select {{ currentType }} User</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of userList\\\" value=\\\"{{ item.Id }}\\\">{{ item.Name }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</fieldset>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-5\\\" *ngIf=\\\"financialYearList &&  financialYearList.length > 0\\\">\\n\\t\\t\\t\\t\\t\\t\\t<fieldset class=\\\"form-group\\\">\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" name=\\\"currentFinancialYear\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"currentFinancialYear\\\"  [(ngModel)]=\\\"currentFinancialYear\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"-1\\\">Select {{ currentType }} Financial Year</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of financialYearList\\\" value=\\\"{{ item.Year }}\\\">{{ item.DisplayYear  }}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t</fieldset>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-2\\\">\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"currentTypeUser != '-1' && currentFinancialYear != '-1' \\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"btn btn-info btn-md\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"getUserPerfromanceReport();\\\">Get Report</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col col-sm-12\\\">\\n\\t\\t\\t<div class=\\\"card mb-3\\\">\\n\\t\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h5>User Performance Report : {{ userPerformanceReportModelList[0]?.Username }}</h5>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-1\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"callMethod('excel')\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"btn btn-info btn-sm\\\">EXCEL</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-1\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"callMethod('pdf')\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"btn btn-info btn-sm\\\">PDF</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\" style=\\\"background-color: #FFF;\\\">\\n\\t\\t\\t\\t\\t\\t<table class=\\\"table table-bordered\\\">\\n\\t\\t\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th rowspan=\\\"3\\\" class=\\\"text-center\\\">Month &nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='Month'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th rowspan=\\\"2\\\" colspan=\\\"2\\\" rowspan=\\\"2\\\" class=\\\"text-center\\\">Opening\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPipeline</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th rowspan=\\\"2\\\" colspan=\\\"2\\\" class=\\\"text-center\\\">New <br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPipeline</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th rowspan=\\\"2\\\" colspan=\\\"2\\\" class=\\\"text-center\\\">From Enquiry</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th colspan=\\\"4\\\" class=\\\"text-center\\\">Conversion</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th rowspan=\\\"2\\\" colspan=\\\"2\\\" class=\\\"text-center\\\">Lost</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th rowspan=\\\"3\\\" class=\\\"text-center\\\">Cumm.<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tBalance &nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='PipelineBankValue'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th rowspan=\\\"3\\\" class=\\\"text-center\\\">Pipeline\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tBank &nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='CummBalanceValue'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th class=\\\"text-center\\\" colspan=\\\"2\\\">From New</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th class=\\\"text-center\\\" colspan=\\\"2\\\">From Old</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th class=\\\"text-center\\\">No&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='OpeningPipelineNo'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th class=\\\"text-center\\\">Value&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='OpeningPipelineValue'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th class=\\\"text-center\\\">No&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='NewPipelineNo'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th class=\\\"text-center\\\">Value&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='NewPipelineValue'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th class=\\\"text-center\\\">No&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='EnquiryNo'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th class=\\\"text-center\\\">Value&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='EnquiryValue'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th class=\\\"text-center\\\">No&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='FromNewNo'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th class=\\\"text-center\\\">Value&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='FromNewValue'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th class=\\\"text-center\\\">No&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='FromOldNo'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th class=\\\"text-center\\\">Value&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='FromOldValue'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th class=\\\"text-center\\\">No&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='LostNo'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th class=\\\"text-center\\\">Value&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='LostValue'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t<tbody>\\t\\t\\t\\t\\t\\t\\t\\t    \\n\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let item of userPerformanceReportModelList \\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{item.Month}}</td>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{item.OpeningPipelineNo}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-right\\\">{{item.OpeningPipelineValue}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{item.NewPipelineNo}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-right\\\">{{item.NewPipelineValue}}</td>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{item.EnquiryNo}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-right\\\">{{item.EnquiryValue}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{item.FromNewNo}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-right\\\">{{item.FromNewValue}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{item.FromOldNo}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-right\\\">{{item.FromOldValue}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{item.LostNo}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-right\\\">{{item.LostValue}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-right\\\">{{item.PipelineBankValue}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-right\\\">{{item.CummBalanceValue}}</td>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n<ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '0px' }\\\"></ngx-loading>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/user-perfromance-report/template/user-perfromance-report.component.html\n// module id = ../../../../../src/app/layout/reports/user-perfromance-report/template/user-perfromance-report.component.html\n// module chunks = 9","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserPerfromanceReportComponent } from './component/user-perfromance-report.component';\n\nconst routes: Routes = [\n    { path: '', component: UserPerfromanceReportComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserPerfromanceReportRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/user-perfromance-report/user-perfromance-report-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbPaginationModule, NgbPaginationConfig, NgbCarouselModule, NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { UserPerfromanceReportRoutingModule } from './user-perfromance-report-routing.module';\nimport { UserPerfromanceReportComponent } from './component/user-perfromance-report.component';\nimport { PageHeaderModule } from '../../../shared';\nimport { UserPerfromanceReportService } from './service/user-perfromance-report.service';\nimport { ToastrModule } from 'toastr-ng2';\nimport { LoadingModule } from 'ngx-loading';\nimport { CommonService } from '../../../shared/services/common.service';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NgbCarouselModule.forRoot(),\n        NgbAlertModule.forRoot(),        \n        UserPerfromanceReportRoutingModule,\n        ToastrModule.forRoot(), // ToastrModule added         \n        PageHeaderModule,\n        FormsModule,\n        LoadingModule,\n        Ng2OrderModule,\n        NgbPaginationModule\n    ],\n    declarations: [\n        UserPerfromanceReportComponent\n    ],\n    providers: [\n            CommonService,\n            NgbPaginationConfig\n        ]\n})\nexport class UserPerfromanceReportModule { }\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/user-perfromance-report/user-perfromance-report.module.ts"],"sourceRoot":"webpack:///"}