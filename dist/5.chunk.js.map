{"version":3,"sources":["D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/visits/component/visits.component.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/visits/model/visits-summery.model.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/visits/model/visits.model.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/visits/service/visits.service.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/visits/styles/visits.component.scss","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/visits/template/visits.component.html","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/visits/visits-routing.module.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/visits/visits.module.ts"],"names":[],"mappings":"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","file":"5.chunk.js","sourcesContent":["import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { routerTransition } from '../../../../router.animations';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { VisitsService } from '../service/visits.service';\nimport { ToastrService } from 'toastr-ng2';\nimport { VisitsSummeryModel } from '../model/visits-summery.model'\nimport { VisitsModel } from '../model/visits.model';\nimport { AuthenticationService } from '../../../../authentication/authentication.service';\nimport { DatePipe } from '@angular/common';\nimport { PaginationModel } from '../../../../shared/model/pagination.model';\nimport { CommonService } from '../../../../shared/services/common.service';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport {IMyDpOptions} from 'mydatepicker';\n\n@Component( {\n    selector: 'app-visits',\n    templateUrl: '../template/visits.component.html',\n    styleUrls: ['../styles/visits.component.scss'],\n    animations: [routerTransition()],\n    providers: [VisitsService,ToastrService,AuthenticationService,DatePipe,CommonService]\n})\n\nexport class VisitsComponent implements OnInit {   \n    public isShowVisitSummery : Boolean;\n    public visitsSummeryModel : VisitsSummeryModel;\n    public visitsModelList : Array<VisitsModel>;\n    public loading = false;    \n    public searchVisitsReport : string;\n    public key: string; //set default\n    public reverse: boolean = false;    \n    public paginationModel : PaginationModel;    \n    public visitsMonths = [];\n    public currentMonth : string;\n    public importance : string;\n    public visitReportFromDate : any;\n    public visitReportToDate : any;\n    public isShowFilters : boolean = false;\n    public en : any;\n    public currentImageUrl : string;\n    closeResult: string;\n    public isExcel : boolean = false;\n    public srNo : number;\n    public errorImage : string = 'https://kwspecialties.on.ca/wp-content/uploads/2014/07/no-image.png';\n\n    public myDatePickerOptions: IMyDpOptions = {\n        dateFormat: 'yyyy/mm/dd',\n    };\n    \n    dt = new Date();\n    // Initialized to specific date (09.10.2018).\n    public model: any = { date: { year: this.dt.getFullYear(), month: (this.dt.getMonth()+1), day: this.dt.getDate() } };\n    \n\n    public onDateFromChanged(event){\n        this.visitReportFromDate = event.formatted;\n    } \n    \n    public onDateEndChanged(event){\n        this.visitReportToDate = event.formatted;\n    } \n    \n\n    constructor( private router: Router,\n        private _datePipe : DatePipe,\n        private route: ActivatedRoute,\n        private modalService: NgbModal,\n        private titleService: Title,\n        private _visitsService: VisitsService,\n        private _commonService: CommonService,        \n        private _authenticationService :AuthenticationService,\n        private toastr: ToastrService) {                \n            this.isShowVisitSummery = false;\n            this.visitsSummeryModel = new VisitsSummeryModel();\n            this.visitsModelList = new Array<VisitsModel>();\n            this.searchVisitsReport = '';\n            this.paginationModel = new PaginationModel(); \n            this.currentMonth = 'All';\n            this.importance = 'All';            \n    }    \n\n    ngOnInit() {\n        this.en = {\n            firstDayOfWeek: 0,\n            dayNames: [\"Sunday\", \"Monday\", \"Tuesday\",\"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n            dayNamesShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n            monthNames: [ \"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\" ],\n            monthNamesShort: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n        };\n        this.getMonthsList();\n        this.titleService.setTitle('Visits');    \n        this.resetPagination();                        \n    }\n    \n    sort(key : any) : void {\n        this.key = key;\n        this.reverse = !this.reverse;\n    }\n\n    updateCurrentImage(currentImage : string) : void {        \n        this.currentImageUrl = currentImage ? currentImage : this.errorImage;\n    }\n\n    open(content) {\n        this.modalService.open(content).result.then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return  `with: ${reason}`;\n        }\n    }    \n\n    getDataBySearch() : void{\n        this.paginationModel.TotalRecords = 100;   \n        this.paginationModel.CurrentPage = 1;\n        this.paginationModel.PerPage = 10;\n        this.getVisitsDetails();\n    }\n\n    resetPagination(): void {\n        this.searchVisitsReport = '';\n        this.paginationModel.TotalRecords = 100;   \n        this.paginationModel.CurrentPage = 1;\n        this.paginationModel.PerPage = 10;\n        this.getVisitsDetails();\n    }\n    callMethod(type) : void{\n        if(type == 'excel')\n        {\n            this.isExcel = true;\n            this.getVisitsDetails();\n        }\n        else if(type == 'pdf')\n        {\n            this.toastr.info(\"Functionaity In Progress\");\n        }\n    }\n\n    changePage(event):void{\n        this.paginationModel.CurrentPage = event;        \n        this.getVisitsDetails();\n    }\n\n    getMonthsList(){\n        this._commonService.getMonthsList().subscribe(result =>{\n            if(result.Error){\n                this.toastr.error(result.ErrorMessage);\n            }\n            else\n            {\n                this.visitsMonths = result.data;\n            }\n        });\n    }\n    \n    getVisitsDetails(): void {\n        this.loading = true;\n        this.visitReportFromDate = this.visitReportFromDate ? this.visitReportFromDate : ''; \n        this.visitReportToDate = this.visitReportToDate ? this.visitReportToDate : ''; \n        this._visitsService.getVisitsDetails(this.visitReportFromDate,this.visitReportToDate,this.isExcel,this.searchVisitsReport,this.paginationModel,this.currentMonth,this.importance).subscribe(( result: any ) => {\n            if(!this.isExcel){\n                this.visitsModelList = [];\n                this.visitsModelList = new Array<VisitsModel>();\n                this.visitsSummeryModel = null;\n                this.visitsSummeryModel = new VisitsSummeryModel();\n            }\n            if ( !result ) {\n                this.toastr.error( 'Something went wrong!!! Please try after sometime.' );\n            } else if ( result.Error ) {\n                this.toastr.error(result.ErrorMessage);\n            } else {                                     \n                this.toastr.success(result.SuccessMessage);\n                this.paginationModel.TotalRecords = result.TotalRecords;\n                let visitsModelList : Array<any> = [];\n                for(let i=0;i<result.Data.length;i++){\n                    let _visitsModel = new VisitsModel();\n                    this.srNo = ((this.paginationModel.CurrentPage - 1 ) * this.paginationModel.PerPage);\n                    _visitsModel.EmpCode = result.Data[i].EmpCode;\n                    _visitsModel.User = result.Data[i].User;  \n                    _visitsModel.TerritoryCode = result.Data[i].TERRITORY_CODE;  \n                    _visitsModel.DealerClassification = result.Data[i].DealerClassification;      \n                    _visitsModel.VisitType = result.Data[i].VisitType;\n                    _visitsModel.AccountType = result.Data[i].AccountType;\n                    _visitsModel.FirmName = result.Data[i].FIRM_NAME;                                  \n                    _visitsModel.Address = result.Data[i].Address;\n                    _visitsModel.MetWhom = result.Data[i].MetWhom; \n                    _visitsModel.Importance = result.Data[i].Importance;\n                    _visitsModel.Objective = result.Data[i].Objective;\n                    _visitsModel.PlanDate = this._datePipe.transform(result.Data[i].PlanDate,'mediumDate');\n                    _visitsModel.Remarks = result.Data[i].Remarks;                                         \n                    _visitsModel.Image = result.Data[i].IMAGE ? result.Data[i].IMAGE : this.errorImage;\n                    if(result.Data[i].VisitDate != '' && result.Data[i].VisitDate != undefined && result.Data[i].VisitDate != null)\n                    {\n                        _visitsModel.VisitDate = this._datePipe.transform(result.Data[i].VisitDate,'medium');\n                    }\n                    else\n                    {\n                        _visitsModel.VisitDate = result.Data[i].VisitDate;\n                    }                    \n                    \n                    _visitsModel.WithRm = (result.Data[i].WithRm == 1 || result.Data[i].WithRm == 'Y') ? 'Yes' : 'No';\n                    this.isExcel ? visitsModelList.push(_visitsModel) : this.visitsModelList.push(_visitsModel);                    \n                }\n                this.visitsSummeryModel = result.Summery;\n                if(this.isExcel){\n                    this._authenticationService.exportFunction(\"VisitReport.xlsx\",visitsModelList);\n                }\n            }\n            this.loading = false;\n            this.isExcel = false;\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/visits/component/visits.component.ts","export class VisitsSummeryModel{\n    public Today : string;\n    public LastMonth : string;\n    public MTD : string;\n}\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/visits/model/visits-summery.model.ts","export class VisitsModel{\n    public SrNo : number;\n    public EmpCode : string;\n    public User : string;\t\n    public TerritoryCode : string;\n    public DealerClassification : string;\n    public AccountType : string;\n    public Importance : string;    \n    public FirmName : string;\t\n    public VisitType : string;\t\n    public MetWhom : string;\t\n    public Objective : string;    \n    public PlanDate : string;\t        \n    public VisitDate : string;\t    \n    public Remarks : string;\t\n    public Address : string;\t\n    public WithRm : string;   \n    public Image: string \n}\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/visits/model/visits.model.ts","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions, Response, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { Constants } from '../../../../shared/constants/constants';\nimport 'rxjs/Rx';\nimport { PaginationModel } from '../../../../shared/model/pagination.model';\n\n@Injectable()\nexport class VisitsService {\n    private getVisitsDetailsUrl: string;\n    private loggedInEmployeeId : string;\n    private loggedInUserRole : string;        \n    constructor( private http: Http ) {\n        this.getVisitsDetailsUrl = Constants.ServerUrl + 'VisitReport/fetchVisitReport';\n        this.loggedInEmployeeId = sessionStorage.getItem(\"EmployeeId\");\n        this.loggedInUserRole = sessionStorage.getItem(\"UserRole\");\n    }\n\n    public getVisitsDetails(fromDate : string,toDate: string,isExcel : boolean,searchVisitsReport: string,_paginationModel : PaginationModel,currentMonth: string,importance :string): any {\n        let url = this.getVisitsDetailsUrl;\n        let selectedUser = sessionStorage.getItem(\"selectedUser\") ? sessionStorage.getItem(\"selectedUser\") : null;\n        let data = [{\"LoggedInEmployeeId\":this.loggedInEmployeeId},\n                    {\"LoggedInUserRole\":this.loggedInUserRole},\n                    {\"CurrentPage\":_paginationModel.CurrentPage},\n                    {\"PerPage\":_paginationModel.PerPage},\n                    {\"selectedUserID\": selectedUser},\n                    {\"currentMonth\":currentMonth},\n                    {\"SearchText\":searchVisitsReport},\n                    {\"fromDate\":fromDate},\n                    {\"toDate\":toDate},\n                    {\"excel\":isExcel},\n                    {\"selectedUser\":selectedUser},\n                    {\"importance\":importance}];\n        console.log(data);            \n        let headers = new Headers({ 'Content-Type': 'application/json','Cache-Control':'no-cache','Pragma':'no-cache' });\n        let options = new RequestOptions({ headers: headers });    \n        return this.http.post(url, data, options)\n        .map(res => this.extractData(res))\n        .share();    \n    }    \n\n    private extractData( res: Response ) {\n        console.log( res );\n        let body = res.json();\n        return body || {};\n    }\n}\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/visits/service/visits.service.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".grid {\\n  position: relative; }\\n\\n.grid-item {\\n  position: absolute; }\\n\\n.grid-item.moving {\\n  z-index: z-index1; }\\n\\n.placeholder {\\n  position: absolute; }\\n\\n.btn-border:hover {\\n  border: 1px solid #31B0D5; }\\n\\n.image-center {\\n  margin: 0 auto;\\n  display: block; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/visits/styles/visits.component.scss\n// module id = ../../../../../src/app/layout/reports/visits/styles/visits.component.scss\n// module chunks = 5","module.exports = \"<div [@routerTransition]>\\n        <app-page-header [heading]=\\\"'Visit'\\\" [icon]=\\\"'fa-users'\\\"></app-page-header>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col col-sm-12\\\">\\n                <div class=\\\"card mb-3\\\">\\n                    <div class=\\\"card-block\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-10\\\">\\n                                <h4 class=\\\"pull-left\\\">Filters</h4>\\n                            </div>\\n                            <div class=\\\"col-sm-2 pull-right\\\" *ngIf=\\\"!isShowFilters\\\">\\n                                <button (click)=\\\"isShowFilters = true\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\n                            </div>\\n                            <div class=\\\"col-sm-2 pull-right\\\" *ngIf=\\\"isShowFilters\\\">\\n                                <button (click)=\\\"isShowFilters = false\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-minus\\\"></i></button>\\n                            </div>                                                                                                            \\n                        </div>\\n                        <div class=\\\"row\\\" *ngIf=\\\"isShowFilters\\\">\\n                            <div class=\\\"col-sm-1 text-right\\\">\\n                                <h6>From Date</h6>\\n                            </div>\\n                            <div class=\\\"col-sm-2\\\">\\n                                    <my-date-picker name=\\\"mydate\\\" placeholder=\\\"yyyy/mm/dd\\\" [options]=\\\"myDatePickerOptions\\\"\\n                                    (dateChanged)=\\\"onDateFromChanged($event)\\\"></my-date-picker>\\n                                <!-- <owl-date-time [(ngModel)]=\\\"visitReportFromDate\\\" \\n                                [type]=\\\"'calendar'\\\"\\n                                [dataType]=\\\"'date'\\\"                                \\n                                [autoClose]=\\\"true\\\"\\n                                [dateFormat]=\\\"'YYYY/MM/DD'\\\"\\n                                [placeHolder]=\\\"'YYYY/MM/DD'\\\"\\n                                [hourFormat]=\\\"'12'\\\"\\n                                [selectionMode]=\\\"'single'\\\"\\n                                name=\\\"visitReportFromDate\\\"\\n                                [locale]=\\\"en\\\"></owl-date-time>   -->                                              \\n                            </div>\\n                            <div class=\\\"col-sm-1 text-right\\\">\\n                                <h6>To Date</h6>\\n                            </div>\\n                            <div class=\\\"col-sm-2\\\">\\n                                    <my-date-picker name=\\\"mydate\\\" placeholder=\\\"yyyy/mm/dd\\\" [options]=\\\"myDatePickerOptions\\\"\\n                                    (dateChanged)=\\\"onDateEndChanged($event)\\\"></my-date-picker>\\n                                <!-- <owl-date-time [(ngModel)]=\\\"visitReportToDate\\\" \\n                                [type]=\\\"'calendar'\\\"\\n                                [dataType]=\\\"'date'\\\"\\n                                [autoClose]=\\\"true\\\"\\n                                [dateFormat]=\\\"'YYYY/MM/DD'\\\"\\n                                [placeHolder]=\\\"'YYYY/MM/DD'\\\"\\n                                [hourFormat]=\\\"'12'\\\"                                \\n                                [selectionMode]=\\\"'single'\\\"\\n                                name=\\\"visitReportToDate\\\" \\n                                [locale]=\\\"en\\\"></owl-date-time>   -->                                              \\n                            </div>\\n                            <div class=\\\"col-sm-2\\\">\\n                                <select class=\\\"form-control\\\" name=\\\"importance\\\"\\n                                    id=\\\"importance\\\" [(ngModel)]=\\\"importance\\\"\\n                                    (change)=\\\"resetPagination()\\\">\\n                                    <option value=\\\"All\\\">All</option>                                            \\n                                    <option value=\\\"Priority\\\">Priority</option>\\n                                    <option value=\\\"Key Account\\\">Key Account</option>\\n                                    <option value=\\\"Other Account\\\">Other Account</option>\\n                                </select>\\n                            </div>\\n                            <div class=\\\"col-sm-2\\\">\\n                                <button type=\\\"button\\\"\\n                                    (click)=\\\"resetPagination()\\\"\\n                                    class=\\\"btn btn-sm btn-info\\\">Get Report</button>\\n                            </div>                        \\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>   \\n        <div class=\\\"row\\\" *ngIf=\\\"true==false\\\">\\n                <div class=\\\"col col-sm-12\\\">\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-block\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-3\\\">\\n                                    <select class=\\\"form-control\\\" name=\\\"currentMonth\\\"\\n                                        id=\\\"currentMonth\\\" [(ngModel)]=\\\"currentMonth\\\"\\n                                        (change)=\\\"resetPagination()\\\">\\n                                        <option value=\\\"All\\\">Current Financial Year</option>\\n                                        <option *ngFor=\\\"let item of visitsMonths\\\" value=\\\"{{ item }}\\\">{{ item }}</option>\\n                                    </select>\\n                                </div>                                \\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n        </div>               \\n        <div class=\\\"row\\\" >\\n                <div class=\\\"col col-sm-12\\\">\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-block\\\">                            \\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <h4 class=\\\"pull-left\\\">Visit Summary</h4>\\n                                </div>\\n                                <div class=\\\"col-sm-2 pull-right\\\" *ngIf=\\\"!isShowVisitSummery\\\" >\\n                                    <button (click)=\\\"isShowVisitSummery = true\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\n                                </div>\\n                                <div class=\\\"col-sm-2 pull-right\\\" *ngIf=\\\"isShowVisitSummery\\\" >\\n                                    <button (click)=\\\"isShowVisitSummery = false\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-minus\\\"></i></button>\\n                                </div>                                                                                                            \\n                            </div>\\n                                <div class=\\\"table-responsive\\\" *ngIf=\\\"isShowVisitSummery\\\" >\\n                                    <br>\\n                                    <table class=\\\"table table-bordered\\\">                                        \\n                                        <thead>\\n                                            <tr>\\n                                                <th></th>\\n                                                <th class=\\\"text-center\\\">Today</th>\\n                                                <th class=\\\"text-center\\\">Last Month</th>\\n                                                <th class=\\\"text-center\\\">MTD</th>\\n                                            </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                            <tr>\\n                                                <th class=\\\"text-center\\\">Visits</th>\\n                                                <td class=\\\"text-center\\\">{{ visitsSummeryModel.Today }} </td>\\n                                                <td class=\\\"text-center\\\">{{ visitsSummeryModel.LastMonth }} </td>\\n                                                <td class=\\\"text-center\\\">{{ visitsSummeryModel.MTD }} </td>                                 \\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>    \\n        <div class=\\\"row\\\" >\\n            <div class=\\\"col col-sm-12\\\">\\n                <div class=\\\"card mb-3\\\">\\n                    <div class=\\\"card-block\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-3\\\">\\n                                <h4>Visit Details</h4>\\n                            </div>                            \\n                            <div class=\\\"col-sm-3\\\">\\n                                <input type=\\\"text\\\" id=\\\"searchVisitsReport\\\" name=\\\"searchVisitsReport\\\" \\n                                    class=\\\"form-control\\\"\\n                                    placeholder=\\\"Search...\\\" [(ngModel)]=\\\"searchVisitsReport\\\">\\n                            </div>\\n                            <div class=\\\"col-sm-2\\\">\\n                                <button type=\\\"button\\\" \\n                                    class=\\\"btn btn-info btn-sm\\\" \\n                                    (click)=\\\"getDataBySearch()\\\">Search</button>\\n                            </div>\\n                            <div class=\\\"col-sm-1\\\">\\n                                <button (click)=\\\"callMethod('excel')\\\" \\n                                    class=\\\"btn btn-info btn-sm\\\">EXCEL</button>\\n                            </div>\\n                            <div class=\\\"col-sm-2\\\" *ngIf=\\\"true == false\\\">\\n                                No of Records:\\n                                <select class=\\\"form-control\\\" name=\\\"paginationModelCurrentPerPage\\\"                                    \\n                                    id=\\\"paginationModelCurrentPerPage\\\"                                     \\n                                    [(ngModel)]=\\\"paginationModel.PerPage\\\"\\n                                    (change)=\\\"getVisitsDetails()\\\">\\n                                    <option value=\\\"5\\\">5</option>\\n                                    <option value=\\\"10\\\">10</option>\\n                                    <option value=\\\"20\\\">20</option>\\n                                    <option value=\\\"50\\\">50</option>\\n                                    <option value=\\\"100\\\">100</option>\\n                                </select>\\n                            </div>\\n                            <div class=\\\"col-sm-1\\\" *ngIf=\\\"true==false\\\">\\n                                <button (click)=\\\"callMethod('pdf')\\\" \\n                                    class=\\\"btn btn-info btn-sm\\\">PDF</button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"table-responsive\\\" \\n                            style=\\\"background-color: #FFF;\\\">\\n                            <table class=\\\"table table-bordered\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th (click)=\\\"sort('SrNo')\\\" class=\\\"text-center\\\"> Sr No&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='SrNo'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n                                        <th (click)=\\\"sort('EmpCode')\\\" class=\\\"text-center\\\"> EmpCode&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='EmpCode'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n                                        <th (click)=\\\"sort('User')\\\" class=\\\"text-center\\\"> User&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='User'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n                                        <th (click)=\\\"sort('TerritoryCode')\\\" class=\\\"text-center\\\"> Territory<br>Code&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='TerritoryCode'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n                                        <th (click)=\\\"sort('DealerClassification')\\\" class=\\\"text-center\\\"> Dealer<br>Classification&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='DealerClassification'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n                                        <th (click)=\\\"sort('AccountType')\\\" class=\\\"text-center\\\"> Account<br>Type&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='AccountType'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n                                        <th (click)=\\\"sort('Importance')\\\" class=\\\"text-center\\\"> Importance &nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='Importance'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>                                        \\n                                        <th (click)=\\\"sort('FirmName')\\\" class=\\\"text-center\\\"> Firm Name&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='FirmName'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n                                        <th (click)=\\\"sort('VisitType')\\\" class=\\\"text-center\\\"> Visit Type&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='VisitType'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n                                        <th (click)=\\\"sort('MetWhom')\\\" class=\\\"text-center\\\"> Met Whom&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='MetWhom'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n                                        <th (click)=\\\"sort('Objective')\\\" class=\\\"text-center\\\"> Objective&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='Objective'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n                                        <th (click)=\\\"sort('PlanDate')\\\" class=\\\"text-center\\\"> Plan Date&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='PlanDate'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n                                        <th (click)=\\\"sort('VisitDate')\\\" class=\\\"text-center\\\"> Visit Date&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='VisitDate'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n                                        <th (click)=\\\"sort('Remarks')\\\" class=\\\"text-center\\\"> Remarks&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='Remarks'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n                                        <!-- <th (click)=\\\"sort('Address')\\\" class=\\\"text-center\\\"> Address&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='Address'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th> -->\\n                                        <th (click)=\\\"sort('WithRm')\\\" class=\\\"text-center\\\"> With Rm&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='WithRm'\\\" [ngClass]=\\\"{'fa-sort-asc':reverse,'fa-sort-desc':!reverse}\\\"></span></th>\\n                                        <th (click)=\\\"sort('Image')\\\" class=\\\"text-center\\\"> Image&nbsp;<span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='WithRm'\\\" ></span></th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let item of visitsModelList;let idx = index;\\\">\\n                                        <td class=\\\"text-center\\\">\\n                                            {{ srNo + idx + 1 }}\\n                                        </td>\\n                                        <td class=\\\"text-center\\\">{{item.EmpCode}}</td>\\n                                        <td class=\\\"text-center\\\">{{item.User}}</td>\\n                                        \\n                                        <td class=\\\"text-center\\\">{{item.TerritoryCode}}</td>\\n                                        <td class=\\\"text-center\\\">{{item.DealerClassification}}</td>\\n                                        <td class=\\\"text-center\\\">{{item.AccountType}}</td>\\n                                        <td class=\\\"text-center\\\">{{item.Importance}}</td>                                        \\n                                        <td class=\\\"text-center\\\">{{item.FirmName}}</td>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n                                        <td class=\\\"text-center\\\">{{item.VisitType}}</td>\\n                                        <td class=\\\"text-center\\\">{{item.MetWhom}}</td>\\n                                        <td class=\\\"text-center\\\">{{item.Objective}}</td>\\n                                        <td class=\\\"text-left\\\">{{item.PlanDate}}</td>\\n                                        <td class=\\\"text-left\\\">{{item.VisitDate}}</td>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n                                        <td class=\\\"text-center\\\">{{item.Remarks}}</td>\\t\\n                                        <!-- <td class=\\\"text-center\\\">{{item.Address}}</td>\\t -->\\n                                        <td class=\\\"text-center\\\">{{item.WithRm}}</td>\\t\\n                                        <td class=\\\"text-center\\\">\\n                                            <a (click)=\\\"updateCurrentImage(item.Image);open(content)\\\">\\n                                                <img src=\\\"{{ item.Image || errorImage }}\\\" width=\\\"100\\\" >\\n                                            </a>                                            \\n                                        </td>\\n                                    </tr>\\n                                </tbody>                                \\n                            </table>                            \\n                            <ngb-pagination [(collectionSize)]=\\\"paginationModel.TotalRecords\\\" \\n                                        (pageChange)=\\\"changePage($event)\\\" \\n                                        [(page)]=\\\"paginationModel.CurrentPage\\\" \\n                                        [(maxSize)]=\\\"paginationModel.PerPage\\\" \\n                                        [rotate]=\\\"true\\\" [ellipses]=\\\"false\\\" \\n                                        [boundaryLinks]=\\\"true\\\" size=\\\"sm\\\"></ngb-pagination>\\n                        </div>    \\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\t\\t\\n        <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Image Preview</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">        \\n                <img class=\\\"text-center\\\" class=\\\"image-center\\\" src=\\\"{{ currentImageUrl }}\\\">\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n            </div>\\t\\t\\n    </ng-template>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '0px' }\\\"></ngx-loading>    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/visits/template/visits.component.html\n// module id = ../../../../../src/app/layout/reports/visits/template/visits.component.html\n// module chunks = 5","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VisitsComponent } from './component/visits.component';\n\nconst routes: Routes = [\n    { path: '', component: VisitsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VisitsRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/visits/visits-routing.module.ts","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { NgbPaginationModule, NgbModule, NgbPaginationConfig, NgbCarouselModule, NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { VisitsRoutingModule } from './visits-routing.module';\nimport { VisitsComponent } from './component/visits.component';\nimport { PageHeaderModule } from '../../../shared';\nimport { VisitsService } from './service/visits.service';\nimport { ToastrModule } from 'toastr-ng2';\nimport { LoadingModule } from 'ngx-loading';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\nimport { MyDatePickerModule } from 'mydatepicker';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NgbModule.forRoot(),\n        NgbCarouselModule.forRoot(),\n        NgbAlertModule.forRoot(),        \n        VisitsRoutingModule,\n        NgbPaginationModule,             \n        ToastrModule.forRoot(), // ToastrModule added \n        LoadingModule,        \n        Ng2OrderModule,\n        FormsModule,        \n        PageHeaderModule,\n        MyDatePickerModule\n    ],\n    declarations: [\n        VisitsComponent\n    ],\n    providers:[NgbPaginationConfig]\n})\nexport class VisitsModule { }\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/visits/visits.module.ts"],"sourceRoot":"webpack:///"}