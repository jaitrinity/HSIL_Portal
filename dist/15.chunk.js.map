{"version":3,"sources":["D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/review-format-report/components/review-format-report.component.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/review-format-report/model/review-format-weekwise-report.model.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/review-format-report/review-format-report-routing.module.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/review-format-report/review-format-report.module.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/review-format-report/service/review-format-report.service.ts","D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/review-format-report/template/review-format-report.component.html"],"names":[],"mappings":"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","file":"15.chunk.js","sourcesContent":["import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { routerTransition } from '../../../../router.animations';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { ReviewFormatReportService } from '../service/review-format-report.service';\nimport { ToastrService } from 'toastr-ng2';\nimport { ReviewFormatReportModel } from '../model/review-format-report.model';\nimport { ReviewFormatWeekwiseReportModel } from '../model/review-format-weekwise-report.model';\nimport { AuthenticationService } from '../../../../authentication/authentication.service';\nimport { PaginationModel } from '../../../../shared/model/pagination.model';\nimport { CommonService } from '../../../../shared/services/common.service';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { DecimalPipe } from '@angular/common';\n\n@Component( {\n    selector: 'app-review-format-report',\n    templateUrl: '../template/review-format-report.component.html',\n    animations: [routerTransition()],\n    providers: [ReviewFormatReportService,ToastrService,AuthenticationService,CommonService,DecimalPipe]\n})\n\nexport class ReviewFormatReportComponent implements OnInit { \n    public showFilters : boolean = false;\n    public showReviewFormatReport : boolean = true;\n    public showCurrentWeek : boolean = false;\n    public showLastWeek : boolean = false;\n    public reviewReportSrNo : number = 0;\n    public currentWeekSrNo : number = 1;\n    public lastWeekSrNo : number = 1;\n    public importance : string = 'All';\n    public p : any;\n    public paginationModel : PaginationModel;\n    public paginationModelCurrentWeek : PaginationModel;\n    public paginationModelLastWeek : PaginationModel;\n    public reviewFormatReportModelList : Array<ReviewFormatReportModel> =  new Array<ReviewFormatReportModel>();\n    public reviewFormatWeekwiseReportModelCurrentWeekList : Array<ReviewFormatWeekwiseReportModel> = new Array<ReviewFormatWeekwiseReportModel>();\n    public reviewFormatWeekwiseReportModelLastWeekList : Array<ReviewFormatWeekwiseReportModel> = new Array<ReviewFormatWeekwiseReportModel>();    \n    public currentMonth : string;\n    public weekType : number;//Last week type = 0; Current Week Type = 1 ; Last Month type = 2; Current Month Type = 3;\n    public excel : boolean = false;\n    public isPDF : boolean = false;\n    public isLoading : boolean = false;\n    public currentReport : string;\n    public paginationModelCurrentPerPage : number = 10;\n    public paginationModelLastPerPage : number = 10;\n    public segmentTypeList : Array<string> = [];\n    public brandsList : Array<string> = [];\n    public brands : string = 'All';\n    public segment : string = 'All';\n    public visitsMonths = [];\n    monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    d = new Date();\n    public currentMonthName : string = this.monthNames[this.d.getMonth()];    \n    public lastMonthName : string = this.monthNames[( (this.d.getMonth()-1) == -1) ? 11 :  (this.d.getMonth()-1)];\n    constructor(private titleService : Title,\n        private _commonService : CommonService,\n        private _authenticationService : AuthenticationService,\n        private toastr: ToastrService,\n        private decimalPipe : DecimalPipe,\n        private route: ActivatedRoute,\n        private reviewFormatReportService : ReviewFormatReportService,\n        private vcr: ViewContainerRef) {\n            this.paginationModel = new PaginationModel();\n            this.paginationModel.CurrentPage = 1;\n            this.paginationModel.PerPage = 10;\n            this.paginationModel.TotalRecords = 0;            \n    }\n\n    ngOnInit(){\n        this.route.queryParams.forEach(( params: Params ) => {\n            this.currentReport = params['type'];\n            window.scrollTo( 0, 0 );\n            this.currentReport = this.currentReport ? this.currentReport : '';\n            this.titleService.setTitle(\"Review Format Report:\"+ this.currentReport); \n            this.showCurrentWeek = false;\n            this.showLastWeek = false;\n        });\n        this.resetCurrentWeekReportPagination();\n        this.resetLastWeekReportPagination(); \n        this.getMonthsList(); \n        if(this.showReviewFormatReport){\n            this.getReviewFormatReport();\n        }\n        this.getSegmentDetails();\n        this.getBrandsDetails();\n    }    \n\n    callMethod(reviewFormatWeekList) : void {\n        let fileName = '';\n        if(this.excel)\n        {\n            fileName = (this.weekType == 1 || this.weekType == 3) ? \"ReviewFormatCurrent\"+this.currentReport+\"Report.xlsx\" : \"ReviewFormatLast\"+this.currentReport+\"Report.xlsx\";\n            this._authenticationService.exportFunction(fileName,reviewFormatWeekList);\n            this.excel = false;\n        }\n        else if(this.isPDF)\n        {\n            this.toastr.info(\"Functionaity In Progress\");\n            this.isPDF = false;\n        }        \n    }    \n\n    getMonthsList(){\n        this._commonService.getMonthsList().subscribe(result =>{\n            if(result.Error){\n                this.toastr.error(result.ErrorMessage);\n            }\n            else\n            {\n                this.visitsMonths = result.data;\n            }\n        });\n    }\n\n    getBrandsDetails() : void {\n        this._commonService.getBrandList().subscribe( result =>{\n            if(result.Error){\n                this.toastr.error(result.ErrorMessage);\n            }\n            else{                \n                this.brandsList = result.Data;\n            }\n        });\n    }\n\n    getSegmentDetails() : void {\n        this.reviewFormatReportService.getSegmentDetails().subscribe( result =>{\n            if(result.Error){\n                this.toastr.error(result.ErrorMessage);\n            }\n            else{                \n                this.segmentTypeList = result.Data;\n            }\n        });\n    }\n\n    getExcelPDF(weekType) : void {\n        this.excel = true;\n        if(weekType == 1){\n            if(this.currentReport == 'Month'){\n                this.weekType = 3;\n            }\n            else{\n                this.weekType = 1;\n            }            \n        }else if(weekType == 0){\n            if(this.currentReport == 'Month'){\n                this.weekType = 2;\n            }\n            else{\n                this.weekType = 0;\n            }\n        }\n        this.getReviewFormatWeekwiseReport();\n    }\n\n    getReviewFormatReport() : void {\n        this.isLoading = true;\n        this.reviewFormatReportService.getReviewFormatReportDetails(this.currentMonth,this.paginationModel).subscribe(result =>{\n            if(result.Error){\n                this.toastr.error(result.ErrorMessage);\n                this.isLoading = false;\n            }else{\n                this.toastr.success(result.SuccessMessage);\n                this.reviewFormatReportModelList = [];                \n                for(let i=0;i<result.Data.length;i++){                    \n                    this.reviewFormatReportModelList.push(result.Data[i]);\n                }                \n                this.paginationModel.TotalRecords = result.Data.TotalRecords;                                                \n                this.isLoading = false;\n            }\n        });\n    }\n\n    public getCurrentWeekReport(event : number) : void{        \n        this.weekType = this.currentReport == 'Month' ? 3 : 1;\n        this.excel = false;\n        this.paginationModelCurrentWeek.CurrentPage = event;\n        this.getReviewFormatWeekwiseReport();\n    }\n\n    getLastWeekReport(event : number) : void{\n        this.weekType = this.currentReport == 'Week' ? 0 : 2;\n        this.excel = false;\n        this.paginationModelLastWeek.CurrentPage = event;\n        this.getReviewFormatWeekwiseReport();\n    }\n\n    getWeekWiseReport(isCurrent : number) : void {\n        if(isCurrent == 1 && this.currentReport == 'Month'){\n            this.weekType = 3;   \n        } else if(isCurrent == 1 && this.currentReport == 'Week'){\n            this.weekType = 1;   \n        } else if(isCurrent == 0 && this.currentReport == 'Month'){\n            this.weekType = 2;   \n        } else if(isCurrent == 0 && this.currentReport == 'Week'){\n            this.weekType = 0;\n        }\n        if(this.weekType == 1 || this.weekType == 3) {\n            this.resetCurrentWeekReportPagination();\n        }\n        else{\n            this.resetLastWeekReportPagination();\n        }\n        this.excel = false;\n        this.getReviewFormatWeekwiseReport();\n    }\n\n    resetCurrentWeekReportPagination(){\n        this.paginationModelCurrentWeek = new PaginationModel();\n        this.paginationModelCurrentWeek.CurrentPage = 1;\n        this.paginationModelCurrentWeek.PerPage = this.paginationModelCurrentPerPage;\n        this.paginationModelCurrentWeek.TotalRecords = 0;\n    }\n\n    resetLastWeekReportPagination(){\n        this.paginationModelLastWeek = new PaginationModel();\n        this.paginationModelLastWeek.CurrentPage = 1;\n        this.paginationModelLastWeek.PerPage = this.paginationModelLastPerPage;\n        this.paginationModelLastWeek.TotalRecords = 0;\n    }\n\n    updateLastMonth(){                \n        this.lastMonthName = this.monthNames[( (this.monthNames.indexOf(this.currentMonthName) - 1) == -1) ? 11 :  (this.monthNames.indexOf(this.currentMonthName) - 1)];        \n    }\n\n    getReviewFormatWeekwiseReport() : void {\n        this.isLoading = true;\n        let paginationTemp = null;\n        paginationTemp = (this.weekType == 1 || this.weekType == 3) ? this.paginationModelCurrentWeek : this.paginationModelLastWeek;\n        this.reviewFormatReportService.getReviewFormatWeekwiseReport(this.currentMonthName,this.lastMonthName,this.brands,this.segment,this.excel,this.importance,this.weekType,paginationTemp).subscribe(result =>{\n            if(result.Error){\n                this.toastr.error(result.ErrorMessage);\n                this.isLoading = false;\n            }else{\n                this.toastr.success(result.SuccessMessage);                \n                if(this.excel || this.isPDF){\n                    this.callMethod(result.Data);\n                }\n                else{\n                    if(this.weekType == 1 || this.weekType == 3){\n                        this.reviewFormatWeekwiseReportModelCurrentWeekList = [];\n                        this.reviewFormatWeekwiseReportModelCurrentWeekList = new Array<ReviewFormatWeekwiseReportModel>();\n                        result.Data.forEach( data => {\n                            let reviewFormatReport: ReviewFormatWeekwiseReportModel = new ReviewFormatWeekwiseReportModel();\n                            reviewFormatReport.UserName = data.UserName;\n                            reviewFormatReport.TerritoryCode = data.TERRITORY_CODE;\n                            reviewFormatReport.Brand = data.Brand;\n                            reviewFormatReport.Importance = data.Importance;\n\n                            console.log(\"Current Report\",this.currentReport);                                \n                            if(this.currentReport == 'Week'){                                \n                                reviewFormatReport.NoOfCallsMadeInTheWeek = +data.NoOfCallsMadeInTheWeek;\n\n                                reviewFormatReport.NoOfEnquiryThisWeek = +data.NoOfEnquiryThisWeek;\n                                reviewFormatReport.EnquiryValueThisWeek = +data.EnquiryValueThisWeek;\n                                reviewFormatReport.PercentChangeFromLastWeekEnquiry = +data.PercentChangeFromLastWeekEnquiry;\n\n                                reviewFormatReport.NoOfPipelineThisWeek = +data.NoOfPipelineThisWeek;\n                                reviewFormatReport.PipelineValueThisWeek = +data.PipelineValueThisWeek;\n                                reviewFormatReport.PercentageChangeFromLastWeekPipeline = +data.PercentageChangeFromLastWeekPipeline;\n\n                                reviewFormatReport.TotalNoOfOpenPipeline = +data.TotalNoOfOpenPipeline;\n                                reviewFormatReport.TotalValueOfOpenPipeline = +data.TotalValueOfOpenPipeline;\n                                reviewFormatReport.PercentageChangeFromLastWeekOpenPipeline = +data.PercentageChangeFromLastWeekOpenPipeline;\n                        \n                                reviewFormatReport.ConversionValueYTD = +data.ConversionValueYTD;\n                                reviewFormatReport.PercentageChangeFromLastWeekConversionValueYTD = +data.PercentageChangeFromLastWeekConversionValueYTD;\n\n                                // reviewFormatReport.BillingDoneYTD = +data.BillingDoneYTD;\n                                // reviewFormatReport.PercentageChangeFromLastWeekBillingDoneYTD = +data.PercentageChangeFromLastWeekBillingDoneYTD;\n                            }else{\n                                console.log(\"Current Report m\",this.currentReport);\n                                reviewFormatReport.NoOfCallsMadeInTheWeek = +data.NoOfCallsMadeInTheMonth;\n\n                                reviewFormatReport.NoOfEnquiryThisWeek = +data.NoOfEnquiryThisMonth;\n                                reviewFormatReport.EnquiryValueThisWeek = +data.EnquiryValueThisMonth;\n                                reviewFormatReport.PercentChangeFromLastWeekEnquiry = +data.PercentChangeFromLastMonthEnquiry;\n\n                                reviewFormatReport.NoOfPipelineThisWeek = +data.NoOfPipelineThisMonth;\n                                reviewFormatReport.PipelineValueThisWeek = +data.PipelineValueThisMonth;\n                                reviewFormatReport.PercentageChangeFromLastWeekPipeline = +data.PercentageChangeFromLastMonthPipeline;\n\n                                reviewFormatReport.TotalNoOfOpenPipeline = +data.TotalNoOfOpenPipeline;\n                                reviewFormatReport.TotalValueOfOpenPipeline = +data.TotalValueOfOpenPipeline;\n                                reviewFormatReport.PercentageChangeFromLastWeekOpenPipeline = +data.PercentageChangeFromLastMonthOpenPipeline;\n                        \n                                reviewFormatReport.ConversionValueYTD = +data.ConversionValueYTD;\n                                reviewFormatReport.PercentageChangeFromLastWeekConversionValueYTD = +data.PercentageChangeFromLastMonthConversionValueYTD;\n\n                                // reviewFormatReport.BillingDoneYTD = +data.BillingDoneYTD;\n                                // reviewFormatReport.PercentageChangeFromLastWeekBillingDoneYTD = +data.PercentageChangeFromLastMonthBillingDoneYTD;\n                            }\n                            \n                            this.reviewFormatWeekwiseReportModelCurrentWeekList.push(reviewFormatReport);\n                        });\n                        if(this.excel || this.isPDF){\n                            this.callMethod(this.reviewFormatWeekwiseReportModelCurrentWeekList);\n                        }\n                        this.paginationModelCurrentWeek.TotalRecords = result.TotalRecords;                         \n                        this.currentWeekSrNo = ((this.paginationModelCurrentWeek.CurrentPage - 1 ) * this.paginationModelCurrentWeek.PerPage);                        \n                    }   \n                    else if(this.weekType == 0 || this.weekType == 2){\n                        this.reviewFormatWeekwiseReportModelLastWeekList = [];\n                        this.reviewFormatWeekwiseReportModelLastWeekList = new Array<ReviewFormatWeekwiseReportModel>();\n                        this.paginationModelLastWeek.TotalRecords = result.TotalRecords;                        \n                                            \n                        result.Data.forEach( data => {\n                            let reviewFormatReport: ReviewFormatWeekwiseReportModel = new ReviewFormatWeekwiseReportModel();\n                            reviewFormatReport.UserName = data.UserName;\n                            reviewFormatReport.TerritoryCode = data.TERRITORY_CODE;\n                            reviewFormatReport.Brand = data.Brand;\n                            reviewFormatReport.Importance = data.Importance;\n                            \n                            if(this.currentReport == 'Week'){                                \n                                reviewFormatReport.NoOfCallsMadeInTheWeek = +data.NoOfCallsMadeInTheWeek;\n\n                                reviewFormatReport.NoOfEnquiryThisWeek = +data.NoOfEnquiryThisWeek;\n                                reviewFormatReport.EnquiryValueThisWeek = +data.EnquiryValueThisWeek;\n                                reviewFormatReport.PercentChangeFromLastWeekEnquiry = +data.PercentChangeFromLastWeekEnquiry;\n\n                                reviewFormatReport.NoOfPipelineThisWeek = +data.NoOfPipelineThisWeek;\n                                reviewFormatReport.PipelineValueThisWeek = +data.PipelineValueThisWeek;\n                                reviewFormatReport.PercentageChangeFromLastWeekPipeline = +data.PercentageChangeFromLastWeekPipeline;\n\n                                reviewFormatReport.TotalNoOfOpenPipeline = +data.TotalNoOfOpenPipeline;\n                                reviewFormatReport.TotalValueOfOpenPipeline = +data.TotalValueOfOpenPipeline;\n                                reviewFormatReport.PercentageChangeFromLastWeekOpenPipeline = +data.PercentageChangeFromLastWeekOpenPipeline;\n                        \n                                reviewFormatReport.ConversionValueYTD = +data.ConversionValueYTD;\n                                reviewFormatReport.PercentageChangeFromLastWeekConversionValueYTD = +data.PercentageChangeFromLastWeekConversionValueYTD;\n\n                                // reviewFormatReport.BillingDoneYTD = +data.BillingDoneYTD;\n                                // reviewFormatReport.PercentageChangeFromLastWeekBillingDoneYTD = +data.PercentageChangeFromLastWeekBillingDoneYTD;\n                            }else{\n                                console.log(\"Current Report m\",this.currentReport);\n                                reviewFormatReport.NoOfCallsMadeInTheWeek = +data.NoOfCallsMadeInTheMonth;\n\n                                reviewFormatReport.NoOfEnquiryThisWeek = +data.NoOfEnquiryThisMonth;\n                                reviewFormatReport.EnquiryValueThisWeek = +data.EnquiryValueThisMonth;\n                                reviewFormatReport.PercentChangeFromLastWeekEnquiry = +data.PercentChangeFromLastMonthEnquiry;\n\n                                reviewFormatReport.NoOfPipelineThisWeek = +data.NoOfPipelineThisMonth;\n                                reviewFormatReport.PipelineValueThisWeek = +data.PipelineValueThisMonth;\n                                reviewFormatReport.PercentageChangeFromLastWeekPipeline = +data.PercentageChangeFromLastMonthPipeline;\n\n                                reviewFormatReport.TotalNoOfOpenPipeline = +data.TotalNoOfOpenPipeline;\n                                reviewFormatReport.TotalValueOfOpenPipeline = +data.TotalValueOfOpenPipeline;\n                                reviewFormatReport.PercentageChangeFromLastWeekOpenPipeline = +data.PercentageChangeFromLastMonthOpenPipeline;\n                        \n                                reviewFormatReport.ConversionValueYTD = +data.ConversionValueYTD;\n                                reviewFormatReport.PercentageChangeFromLastWeekConversionValueYTD = +data.PercentageChangeFromLastMonthConversionValueYTD;\n\n                                // reviewFormatReport.BillingDoneYTD = +data.BillingDoneYTD;\n                                // reviewFormatReport.PercentageChangeFromLastWeekBillingDoneYTD = +data.PercentageChangeFromLastMonthBillingDoneYTD;\n                            }\n                            \n                            this.reviewFormatWeekwiseReportModelLastWeekList.push(reviewFormatReport);\n                        });\n\n                        this.lastWeekSrNo = ((this.paginationModelCurrentWeek.CurrentPage - 1 ) * this.paginationModelCurrentWeek.PerPage);                        \n                    }\n                }\n                this.isLoading = false;                                         \n            }\n        });\n    }\n\n    // precisionRound(number, precision) {\n    //     var factor = Math.pow(10, precision);\n    //     return Math.round(number * factor) / factor;\n    // }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/review-format-report/components/review-format-report.component.ts","export class ReviewFormatWeekwiseReportModel{\n    public SrNo : number;\n    public UserName : string;\n    public TerritoryCode : string;\n    public DealerClassification : string;\n    public Brand: string;\n    public Importance: string;\n    public NoOfCallsMadeInTheWeek : number = 0;\n    public NoOfEnquiryThisWeek : number = 0;\n    public EnquiryValueThisWeek: number = 0.00;\n    public PercentChangeFromLastWeekEnquiry : number = 0;\n\n    public NoOfPipelineThisWeek : number = 0;\n    public PipelineValueThisWeek : number = 0.00;\n    public PercentageChangeFromLastWeekPipeline : number = 0;\n\n    public TotalNoOfOpenPipeline : number = 0;\n    public TotalValueOfOpenPipeline : number = 0.00;\n    public PercentageChangeFromLastWeekOpenPipeline : number = 0;\n\n    public ConversionValueYTD : number = 0.00;\n    public PercentageChangeFromLastWeekConversionValueYTD : number = 0;\n    public BillingDoneYTD : number;\n    public PercentageChangeFromLastWeekBillingDoneYTD : number;\n}\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/review-format-report/model/review-format-weekwise-report.model.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReviewFormatReportComponent } from './components/review-format-report.component';\n\nconst routes: Routes = [\n    { path: '', component: ReviewFormatReportComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReviewFormatReportRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/review-format-report/review-format-report-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbPaginationModule, NgbModule, NgbPaginationConfig, NgbCarouselModule, NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { ReviewFormatReportRoutingModule } from './review-format-report-routing.module';\nimport { ReviewFormatReportComponent } from './components/review-format-report.component';\nimport { PageHeaderModule } from '../../../shared';\nimport { ReviewFormatReportService } from './service/review-format-report.service';\nimport { ToastrModule } from 'toastr-ng2';\nimport { LoadingModule } from 'ngx-loading';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\nimport { NgxPaginationModule } from 'ngx-pagination'; // <-- import the module\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NgbCarouselModule.forRoot(),\n        NgbAlertModule.forRoot(), \n        NgxPaginationModule,       \n        ReviewFormatReportRoutingModule,\n        ToastrModule.forRoot(), // ToastrModule added \n        LoadingModule,       \n        NgbModule.forRoot(), \n        NgbPaginationModule,         \n        FormsModule,        \n        Ng2OrderModule,        \n        PageHeaderModule\n    ],\n    declarations: [\n        ReviewFormatReportComponent\n    ],\n    providers:[NgbPaginationConfig,ReviewFormatReportService]\n})\n\nexport class ReviewFormatReportModule { }\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/review-format-report/review-format-report.module.ts","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions, Response, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { Constants } from '../../../../shared/constants/constants';\nimport 'rxjs/Rx';\nimport { PaginationModel } from '../../../../shared/model/pagination.model';\n\n@Injectable()\nexport class ReviewFormatReportService {\n    private getReviewFormatReportUrl: string;\n    private getReviewFormatCurrentWeekReportUrl: string;\n    private getReviewFormatLastWeekReportUrl: string;\n    private loggedInEmployeeId : string;\n    private loggedInUserRole : string;\n    private getSegmentDetailsUrl : string;\n    private dataString : any;\n    constructor( private http: Http ) {                \n        this.getReviewFormatReportUrl = Constants.ServerUrl + 'ReviewFormatReport/fetchReviewFormatReport';\n        this.getReviewFormatLastWeekReportUrl = Constants.ServerUrl + 'ReviewFormatReport/fetchReviewFormatWeekWiseReport';\n        this.getSegmentDetailsUrl = Constants.ServerUrl + 'Dashboard/getSegmentDetails';\n        this.loggedInEmployeeId = sessionStorage.getItem(\"EmployeeId\");\n        this.loggedInUserRole = sessionStorage.getItem(\"UserRole\");\n    }\n\n\n\n    public getReviewFormatReportDetails(currentMonth : string,_paginationModel: PaginationModel): any {\n        let url = this.getReviewFormatReportUrl;\n        //let selectedUser = sessionStorage.getItem(\"selectedUser\") ? sessionStorage.getItem(\"selectedUser\") : null;\n        let selectUserId = sessionStorage.getItem(\"selectedUser\");\n        this.dataString = [{\"LoggedInEmployeeId\":this.loggedInEmployeeId},\n        {\"LoggedInUserRole\":this.loggedInUserRole},\n        {\"CurrentPage\":_paginationModel.CurrentPage},\n        {\"PerPage\":_paginationModel.PerPage},\n        {\"currentMonth\":currentMonth},\n        {\"selectedUserID\": selectUserId}];\n\n        let headers = null;\n        let excel = false;\n        console.log(this.dataString);\n        if(excel){\n            headers = new Headers({ 'Content-Type': 'application/json','accept':'application/vnd.ms-excel','Cache-Control':'no-cache','Pragma':'no-cache' });\n        }\n        else{\n            headers = new Headers({ 'Content-Type': 'application/json','Cache-Control':'no-cache','Pragma':'no-cache' });\n        }\n        let options = new RequestOptions({ headers: headers });    \n        return this.http.post(url, this.dataString, options)\n        .map(res =>  this.extractData(res)\n         )\n        .share();\n    }\n\n    getSegmentDetails(){\n        let url = this.getSegmentDetailsUrl;\n        let data = [{\"LoggedInEmployeeId\":this.loggedInEmployeeId},\n                    {\"LoggedInUserRole\":this.loggedInUserRole}];\n        let headers = new Headers({ 'Content-Type': 'application/json','Cache-Control':'no-cache','Pragma':'no-cache' });        \n        let options = new RequestOptions({ headers: headers });    \n        return this.http.post(url, data, options)\n        .map(res =>  this.extractData(res)\n         )\n        .share();\n    }\n\n    public getReviewFormatWeekwiseReport(currentMonthName : string,lastMonthName : string,brands,segment,excel,importance : string,weekType : number,_paginationModel: PaginationModel): any {\n        let url = this.getReviewFormatLastWeekReportUrl;\n        console.log(excel);\n        let selectedUser = sessionStorage.getItem(\"selectedUser\") ? sessionStorage.getItem(\"selectedUser\") : null;\n        let data = [{\"LoggedInEmployeeId\":this.loggedInEmployeeId},\n                    {\"LoggedInUserRole\":this.loggedInUserRole},\n                    {\"CurrentPage\":_paginationModel.CurrentPage},\n                    {\"selectedUserID\": selectedUser},\n                    {\"WeekType\":weekType},\n                    {\"excel\":excel? 1 : 0},\n                    {\"brands\":brands},\n                    {\"segment\":segment},                    \n                    {\"currentMonthName\":currentMonthName},\n                    {\"lastMonthName\":lastMonthName},\n                    {\"importance\":importance},                    \n                    {\"PerPage\":_paginationModel.PerPage}];\n        let headers = null;\n        //let excel = false;\n        // if(excel){\n        //     headers = new Headers({ 'Content-Type': 'application/json','accept':'application/vnd.ms-excel','Cache-Control':'no-cache','Pragma':'no-cache' });\n        // }\n        // else{\n            headers = new Headers({ 'Content-Type': 'application/json','Cache-Control':'no-cache','Pragma':'no-cache' });\n        //}\n        let options = new RequestOptions({ headers: headers });    \n        return this.http.post(url, data, options)\n        .map(res =>  this.extractData(res)\n         )\n        .share();\n    }    \n\n    private extractData( res: Response ) {\n        console.log( \"Response:\",res );\n        let body = res.json();\n        return body || {};\n    }\n    \n    downloadFile(data: any){\n        var blob = new Blob([data], { type: 'application/vnd.ms-excel' });\n        var url = window.URL.createObjectURL(blob);\n        window.open(url);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/review-format-report/service/review-format-report.service.ts","module.exports = \"<div [@routerTransition]>\\n    <app-page-header [heading]=\\\"'Review Format Report'\\\" [icon]=\\\"'fa-users'\\\"></app-page-header>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-12\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-block\\\">\\n                    <div class=\\\"row\\\">                        \\n                        <div class=\\\"col-sm-2\\\">\\n                            <a class=\\\"btn btn-border btn-sm\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/review-format-report\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[routerLinkActive]=\\\"['router-link-active']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[queryParams]=\\\"{ type: 'Month' }\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'btn-info' : currentReport == 'Month' }\\\" >Month Wise</a>                            \\n                        </div> \\n                        <div class=\\\"col-sm-2\\\">\\n                            <a class=\\\"btn btn-border btn-sm\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/review-format-report\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[routerLinkActive]=\\\"['router-link-active']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[queryParams]=\\\"{ type: 'Week' }\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'btn-info' : currentReport == 'Week' }\\\" >Week Wise</a>                           \\n                        </div>                          \\n                    </div>                    \\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-12\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-block\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-11\\\" >\\n                            <h5 class=\\\"pull-left\\\">Filters</h5>\\n                        </div>\\n                        <div class=\\\"col-sm-1\\\" *ngIf=\\\"!showFilters\\\">\\n                            <a class=\\\"btn btn-info btn-sm pull-right\\\" style=\\\"color:white\\\" (click)=\\\"showFilters = true\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\n                        </div> \\n                        <div class=\\\"col-sm-1\\\" *ngIf=\\\"showFilters\\\">\\n                            <a class=\\\"btn btn-info btn-sm pull-right\\\" style=\\\"color:white\\\" (click)=\\\"showFilters = false\\\"><i class=\\\"fa fa-minus\\\"></i></a>\\n                        </div>                                               \\n                    </div>\\n                    <div class=\\\"row\\\" *ngIf=\\\"showFilters\\\">\\n                        <div class=\\\"col-sm-2\\\">\\n                            <select class=\\\"form-control\\\" name=\\\"importance\\\"\\n                                id=\\\"importance\\\" [(ngModel)]=\\\"importance\\\">\\n                                <option value=\\\"All\\\">All</option>                                            \\n                                <option value=\\\"Priority\\\">Priority</option>\\n                                <option value=\\\"Key Account\\\">Key Account</option>\\n                                <option value=\\\"Other Account\\\">Other Account</option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n                            <select class=\\\"form-control\\\" name=\\\"brands\\\"\\n                                id=\\\"brands\\\" [(ngModel)]=\\\"brands\\\">\\n                                <option value=\\\"All\\\">All</option>\\n                                <option *ngFor=\\\"let item of brandsList\\\" value=\\\"{{ item }}\\\">{{ item }}</option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" id=\\\"segment\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"segment\\\" [(ngModel)]=\\\"segment\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"resetPagination()\\\">\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"All\\\">All</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of segmentTypeList\\\" value=\\\"{{ item }}\\\">{{ item }}</option>\\n\\t\\t\\t\\t\\t\\t\\t</select>\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\" *ngIf=\\\"currentReport == 'Month'\\\">\\n                            <select class=\\\"form-control\\\" name=\\\"currentMonthName\\\"\\n                                (change)=\\\"updateLastMonth()\\\"\\n                                id=\\\"currentMonthName\\\" [(ngModel)]=\\\"currentMonthName\\\">                                \\n                                <option *ngFor=\\\"let item of visitsMonths\\\" value=\\\"{{ item }}\\\">{{ item }}</option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\" *ngIf=\\\"currentReport != 'Month'\\\">                        \\n                            <button class=\\\"btn btn-info\\\" (click)=\\\"getReviewFormatReport();showCurrentWeek = false;showLastWeek = false;\\\">Get Report</button>\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\" *ngIf=\\\"currentReport == 'Month'\\\">\\n                            <button class=\\\"btn btn-info\\\" (click)=\\\"getReviewFormatReport();showCurrentWeek = false;showLastWeek = false;\\\">Get Report</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-12\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-block\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-10\\\">\\n                            <h5 class=\\\"pull-left\\\">Review Format Report</h5>\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\" *ngIf=\\\"!showReviewFormatReport\\\">\\n                            <a (click)=\\\"getReviewFormatReport();showReviewFormatReport = true\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\" *ngIf=\\\"showReviewFormatReport\\\">\\n                            <a (click)=\\\"showReviewFormatReport = false\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-minus\\\"></i></a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"table-responsive\\\" *ngIf=\\\"showReviewFormatReport\\\">\\n                        <br>\\n                        <table class=\\\"table table-bordered\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th rowspan=\\\"2\\\" class=\\\"text-center\\\">Sr No</th>\\n                                    <th rowspan=\\\"2\\\" class=\\\"text-center\\\">Name</th>\\n                                    <th rowspan=\\\"2\\\" class=\\\"text-center\\\">Role</th>\\n                                    <th rowspan=\\\"2\\\" class=\\\"text-center\\\">Zone</th>\\n                                    <th colspan=\\\"2\\\" class=\\\"text-center\\\">Hindware</th>\\n                                    <th colspan=\\\"2\\\" class=\\\"text-center\\\">Lifestyle</th>\\n                                </tr>\\n                                <tr>\\n                                    <th class=\\\"text-center\\\">No</th>\\n                                    <th class=\\\"text-center\\\">Value</th>\\n                                    <th class=\\\"text-center\\\">No</th>\\n                                    <th class=\\\"text-center\\\">Value</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let reviewFormatReportItem of reviewFormatReportModelList | paginate: { itemsPerPage: 10, currentPage: p } ;let currentReviewIdx = index;\\\">\\n                                    <td>{{ reviewReportSrNo + currentReviewIdx + 1 }}</td>\\n                                    <td>{{ reviewFormatReportItem.Name }}</td>\\n                                    <td>{{ reviewFormatReportItem.Role }}</td>\\n                                    <td>{{ reviewFormatReportItem.Zone }}</td>\\n                                    <td>{{ reviewFormatReportItem.HindwareNo || '-' }}</td>\\n                                    <td class=\\\"text-right\\\">{{ reviewFormatReportItem.HindwareValue || '-' }}</td>\\n                                    <td>{{ reviewFormatReportItem.LifestyleNo || '-' }}</td>\\n                                    <td class=\\\"text-right\\\">{{ reviewFormatReportItem.LifestyleValue || '-' }}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                        <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-12\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-block\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-7\\\">\\n                            <h5 class=\\\"pull-left\\\" *ngIf=\\\"currentReport != 'Month'\\\">Review Format Report : Current {{ currentReport }}</h5>\\n                            <h5 class=\\\"pull-left\\\" *ngIf=\\\"currentReport == 'Month'\\\">Review Format Report : {{ currentMonthName }}</h5>\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <label>No of Records:</label>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">                   \\n                                    <select class=\\\"form-control\\\" name=\\\"paginationModelCurrentPerPage\\\"\\n                                        (change)=\\\"getWeekWiseReport(1)\\\"\\n                                        id=\\\"paginationModelCurrentPerPage\\\" [(ngModel)]=\\\"paginationModelCurrentPerPage\\\">                                \\n                                        <option value=\\\"10\\\">10</option>\\n                                        <option value=\\\"20\\\">20</option>\\n                                        <option value=\\\"25\\\">25</option>\\n                                    </select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n                            <a (click)=\\\"getExcelPDF(1)\\\" style=\\\"color:white\\\" class=\\\"btn btn-info btn-sm\\\">Excel</a>\\n                        </div>\\n                        <div class=\\\"col-sm-1\\\" *ngIf=\\\"!showCurrentWeek\\\">\\n                            <a (click)=\\\"getWeekWiseReport(1);showCurrentWeek = true\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\n                        </div>\\n                        <div class=\\\"col-sm-1\\\" *ngIf=\\\"showCurrentWeek\\\">\\n                            <a (click)=\\\"showCurrentWeek = false\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-minus\\\"></i></a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"table-responsive\\\" *ngIf=\\\"showCurrentWeek\\\">\\n                        <br>\\n                        <table class=\\\"table table-bordered\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>Sr No</th>\\n                                    <th>User Name (Sales / BD)</th>\\n                                    <th>Territory Code</th>\\n                                    <th>Brand</th>\\n                                    <th>Importance</th>\\n                                    <th>No. of calls made</th>\\n                                    <th>No. of Enquiry</th>\\n                                    <th>Enquiry Value(in Lacs)</th>\\n                                    <th>% Change from last {{ currentReport }}(Enquiry)</th>\\n                                    <th>No. of Pipeline(Hot + Warm)</th>\\n                                    <th>Pipeline Value(Hot + Warm)</th>\\n                                    <th>% Change from last {{ currentReport }}(Pipeline)</th>\\n                                    <th>Total no. of Open Pipeline</th>\\n                                    <th>Total value of open pipeline</th>\\n                                    <th>% Change from last {{ currentReport }}</th>\\n                                    <th>Total YTD Conversion Value (in Lacs)</th>\\n                                    <th>% Change from last {{ currentReport }}</th>\\n                                    <!-- <th>Billing done (Rs Lakhs) YTD</th>\\n                                    <th>% Change from last {{ currentReport }}</th>                                     -->\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let reviewFormatReportItem of reviewFormatWeekwiseReportModelCurrentWeekList;let currentWeekIdx = index;\\\">\\n                                    <td *ngIf=\\\"currentWeekIdx != (reviewFormatWeekwiseReportModelCurrentWeekList.length - 1)\\\">{{ currentWeekSrNo + currentWeekIdx + 1 }}</td>\\n                                    <td *ngIf=\\\"currentWeekIdx == (reviewFormatWeekwiseReportModelCurrentWeekList.length - 1)\\\" colspan=\\\"5\\\" class=\\\"text-center\\\"><b>Total</b></td>\\n                                    <td *ngIf=\\\"currentWeekIdx != (reviewFormatWeekwiseReportModelCurrentWeekList.length - 1)\\\">{{ reviewFormatReportItem.UserName }}</td>\\n                                    <td *ngIf=\\\"currentWeekIdx != (reviewFormatWeekwiseReportModelCurrentWeekList.length - 1)\\\">{{ reviewFormatReportItem.TerritoryCode }}</td>\\n                                    <td *ngIf=\\\"currentWeekIdx != (reviewFormatWeekwiseReportModelCurrentWeekList.length - 1)\\\">{{ reviewFormatReportItem.Brand }}</td>\\n                                    <td *ngIf=\\\"currentWeekIdx != (reviewFormatWeekwiseReportModelCurrentWeekList.length - 1)\\\">{{ reviewFormatReportItem.Importance }}</td>\\n                                    <td>{{ reviewFormatReportItem.NoOfCallsMadeInTheWeek }}</td>\\n                                    <td>{{ reviewFormatReportItem.NoOfEnquiryThisWeek }}</td>\\n                                    <td>{{ reviewFormatReportItem.EnquiryValueThisWeek == 0 ? '0.00' : reviewFormatReportItem.EnquiryValueThisWeek }}</td>\\n                                    <td>{{ reviewFormatReportItem.PercentChangeFromLastWeekEnquiry }}</td>\\n\\n                                    <td>{{ reviewFormatReportItem.NoOfPipelineThisWeek }}</td>\\n                                    <td>{{ reviewFormatReportItem.PipelineValueThisWeek == 0 ? '0.00' : reviewFormatReportItem.PipelineValueThisWeek }}</td>\\n                                    <td>{{ reviewFormatReportItem.PercentageChangeFromLastWeekPipeline }}</td>\\n\\n                                    <td>{{ reviewFormatReportItem.TotalNoOfOpenPipeline }}</td>\\n                                    <td>{{ reviewFormatReportItem.TotalValueOfOpenPipeline == 0 ? '0.00' : reviewFormatReportItem.TotalValueOfOpenPipeline }}</td>\\n                                    <td>{{ reviewFormatReportItem.PercentageChangeFromLastWeekOpenPipeline }}</td>\\n\\n                                    <td>{{ reviewFormatReportItem.ConversionValueYTD == 0 ? '0.00' : reviewFormatReportItem.ConversionValueYTD }}</td>\\n                                    <td>{{ reviewFormatReportItem.PercentageChangeFromLastWeekConversionValueYTD }}</td>\\n                                    <!-- <td>{{ reviewFormatReportItem.BillingDoneYTD }}</td>\\n                                    <td>{{ reviewFormatReportItem.PercentageChangeFromLastWeekBillingDoneYTD }}</td> -->\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                        <div *ngIf=\\\"paginationModelCurrentWeek.TotalRecords >= 0\\\">\\n                                <ngb-pagination [collectionSize]=\\\"paginationModelCurrentWeek.TotalRecords\\\" (pageChange)=\\\"getCurrentWeekReport($event)\\\" [(page)]=\\\"paginationModelCurrentWeek.CurrentPage\\\" [maxSize]=\\\"paginationModelCurrentWeek.PerPage\\\" [rotate]=\\\"true\\\" [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\" size=\\\"sm\\\"></ngb-pagination>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-12\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-block\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-7\\\">\\n                            <h5 class=\\\"pull-left\\\" *ngIf=\\\"currentReport != 'Month'\\\">Review Format Report : Last {{ currentReport }}</h5>\\n                            <h5 class=\\\"pull-left\\\" *ngIf=\\\"currentReport == 'Month'\\\">Review Format Report : {{ lastMonthName }}</h5>\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <label>No of Records:</label>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">                   \\n                                    <select class=\\\"form-control\\\" name=\\\"paginationModelLastPerPage\\\"\\n                                        (change)=\\\"getWeekWiseReport(0)\\\"\\n                                        id=\\\"paginationModelLastPerPage\\\" [(ngModel)]=\\\"paginationModelLastPerPage\\\">                                \\n                                        <option value=\\\"10\\\">10</option>\\n                                        <option value=\\\"20\\\">20</option>\\n                                        <option value=\\\"25\\\">25</option>\\n                                    </select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n                            <a (click)=\\\"getExcelPDF(0)\\\" style=\\\"color:white\\\" class=\\\"btn btn-info btn-sm\\\">Excel</a>\\n                        </div>                        \\n                        <div class=\\\"col-sm-1  pull-right\\\" *ngIf=\\\"!showLastWeek\\\">\\n                            <a (click)=\\\"getWeekWiseReport(0);showLastWeek = true\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\n                        </div>\\n                        <div class=\\\"col-sm-1 pull-right\\\" *ngIf=\\\"showLastWeek\\\">\\n                                <a (click)=\\\"showLastWeek = false\\\" style=\\\"color:white\\\" class=\\\"btn btn-info pull-right btn-sm\\\"><i class=\\\"fa fa-minus\\\"></i></a>\\n                        </div>\\n                    </div>                    \\n                    <div class=\\\"table-responsive\\\" *ngIf=\\\"showLastWeek\\\">\\n                        <br>\\n                        <table class=\\\"table table-bordered\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>Sr No</th>\\n                                    <th>User Name (Sales / BD)</th>\\n                                    <th>Territory Code</th>\\n                                    <th>Brand </th>\\n                                    <th>Importance</th>\\n                                    <th>No. of calls made</th>\\n                                    <th>No. of Enquiry</th>\\n                                    <th>Enquiry Value (in Lacs)</th>\\n                                    <th>% Change from last {{ currentReport }}(Enquiry)</th>\\n                                    <th>No. of Pipeline (Hot + Warm)</th>\\n                                    <th>Pipeline Value (Hot + Warm)</th>\\n                                    <th>% Change from last {{ currentReport }}(Pipeline)</th>\\n                                    <th>Total no. of Open Pipeline</th>\\n                                    <th>Total value of open pipeline</th>\\n                                    <th>% Change from last {{ currentReport }}</th>\\n                                    <th>Total YTD Conversion Value (in Lacs)</th>\\n                                    <th>% Change from last {{ currentReport }}</th>\\n                                    <!-- <th>Billing done (Rs Lakhs) YTD</th>\\n                                    <th>% Change from last {{ currentReport }}</th>                                     -->\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let reviewFormatReportItem of reviewFormatWeekwiseReportModelLastWeekList;let lastWeekIdx = index;\\\">\\n                                    <td *ngIf=\\\"lastWeekIdx != (reviewFormatWeekwiseReportModelLastWeekList.length - 1)\\\">{{ lastWeekSrNo + lastWeekIdx + 1 }}</td>\\n                                    <td *ngIf=\\\"lastWeekIdx == (reviewFormatWeekwiseReportModelLastWeekList.length - 1)\\\" colspan=\\\"5\\\" class=\\\"text-center\\\"><b>Total</b></td>\\n                                    <td *ngIf=\\\"lastWeekIdx != (reviewFormatWeekwiseReportModelLastWeekList.length - 1)\\\">{{ reviewFormatReportItem.UserName }}</td>\\n                                    <td *ngIf=\\\"lastWeekIdx != (reviewFormatWeekwiseReportModelLastWeekList.length - 1)\\\">{{ reviewFormatReportItem.TerritoryCode }}</td>\\n                                    <td *ngIf=\\\"lastWeekIdx != (reviewFormatWeekwiseReportModelLastWeekList.length - 1)\\\">{{ reviewFormatReportItem.Brand }}</td>\\n                                    <td *ngIf=\\\"lastWeekIdx != (reviewFormatWeekwiseReportModelLastWeekList.length - 1)\\\">{{ reviewFormatReportItem.Importance }}</td>                                    \\n                                    <td>{{ reviewFormatReportItem.NoOfCallsMadeInTheWeek }}</td>\\n                                    <td>{{ reviewFormatReportItem.NoOfEnquiryThisWeek }}</td>\\n                                    <td>{{ reviewFormatReportItem.EnquiryValueThisWeek == 0 ? '0.00' : reviewFormatReportItem.EnquiryValueThisWeek }}</td>\\n                                    <td>{{ reviewFormatReportItem.PercentChangeFromLastWeekEnquiry }}</td>\\n\\n                                    <td>{{ reviewFormatReportItem.NoOfPipelineThisWeek }}</td>\\n                                    <td>{{ reviewFormatReportItem.PipelineValueThisWeek == 0 ? '0.00' : reviewFormatReportItem.PipelineValueThisWeek }}</td>\\n                                    <td>{{ reviewFormatReportItem.PercentageChangeFromLastWeekPipeline }}</td>\\n\\n                                    <td>{{ reviewFormatReportItem.TotalNoOfOpenPipeline }}</td>\\n                                    <td>{{ reviewFormatReportItem.TotalValueOfOpenPipeline == 0 ? '0.00' : reviewFormatReportItem.TotalValueOfOpenPipeline }}</td>\\n                                    <td>{{ reviewFormatReportItem.PercentageChangeFromLastWeekOpenPipeline }}</td>\\n\\n                                    <td>{{ reviewFormatReportItem.ConversionValueYTD == 0 ? '0.00' : reviewFormatReportItem.ConversionValueYTD }}</td>\\n                                    <td>{{ reviewFormatReportItem.PercentageChangeFromLastWeekConversionValueYTD }}</td>\\n                                    <!-- <td>{{ reviewFormatReportItem.BillingDoneYTD }}</td>\\n                                    <td>{{ reviewFormatReportItem.PercentageChangeFromLastWeekBillingDoneYTD }}</td> -->\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                        <div *ngIf=\\\"paginationModelLastWeek.TotalRecords >= 0\\\">\\n                                <ngb-pagination [collectionSize]=\\\"paginationModelLastWeek.TotalRecords\\\" (pageChange)=\\\"getLastWeekReport($event)\\\" [(page)]=\\\"paginationModelLastWeek.CurrentPage\\\" [maxSize]=\\\"paginationModelLastWeek.PerPage\\\" [rotate]=\\\"true\\\" [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\" size=\\\"sm\\\"></ngb-pagination>\\n                        </div>                        \\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<ngx-loading [show]=\\\"isLoading\\\" [config]=\\\"{ backdropBorderRadius: '0px' }\\\"></ngx-loading>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/jpm/HSIL_Portal/HSIL_Portal/src/app/layout/reports/review-format-report/template/review-format-report.component.html\n// module id = ../../../../../src/app/layout/reports/review-format-report/template/review-format-report.component.html\n// module chunks = 15"],"sourceRoot":"webpack:///"}